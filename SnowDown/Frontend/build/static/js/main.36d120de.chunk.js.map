{"version":3,"sources":["Template/BaseTemplate/Home/Section-2.js","Template/BaseTemplate/Home/Home.js","Template/BaseTemplate/Reports/Report.js","Router/BaseRoute.js","Template/UserTemplate/ExportCSV/Export.js","Template/UserTemplate/MakeReports/Report.js","Template/UserTemplate/Home/Home.js","Template/UserTemplate/DisplayData/DisplayData.js","Router/UserRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Section2","props","className","Container","Row","Col","lg","md","sm","src","img","width","height","alt","header","text","Home","to","Button","variant","href","Accordion","Item","eventKey","Header","Body","class","require","config","FileReport","useState","phone","setPhone","lat","lng","marker","setMarker","firstName","setFirstName","lastName","setLastName","email","setEmail","mapSearch","setMapSearch","pictures","setPicture","images","setImages","animalsType","setAnimalsType","submitQuery","setSubmitQuery","description","setDescription","sector","setSector","locationDescription","setLocationDescription","animalPresent","setAnimalPresent","sealSize","setSealSize","sex","setSex","landWater","setLandwater","IDedType","setIdType","tagedSide","setTagedSide","tagColor","setTagColor","tagNumber","setTagNumber","bleachNum","setBleachNum","IdPerm","setIdPerm","IdDescription","setIdDescription","molting","setMolting","sealLogging","setSealLogging","momPup","setMomPup","SRASetUp","setSRASetUp","sealDepart","setSealDepart","size","setSize","status","setStatus","issue","setIssue","island","setIsland","FAST","setFAST","SRAName","setSRAName","departDate","setDepartDate","departTime","setDepartTime","delivered","setDeleivered","outReach","setOutReach","deliveryLocation","setDeliveryLocation","responderName","SetResponderName","amountOfResponder","setAmountOfResponder","timeArrived","setTimeArrived","timeLeft","setTimeLeft","center","setCenter","markerMount","setMarkerMount","coords","norht","south","east","west","type","shape","setShape","libraries","animaloptions","setAnimalOptions","responderPresent","setResponderPresent","sectorOptions","setSectorOptions","sealSizeOption","setSealSizeOption","sexOptions","setSexOptions","howIdOption","setHowIdOption","tagSideOption","setTagSideOption","tagColorOption","setTagColorOption","statusOption","setStatusOption","issueOption","setIssueOption","islandOption","setIslandOption","FASTOption","setFASTOption","locationOption","setLocationOption","history","useHistory","Present","value","label","removeFile","id","filter","x","isLoaded","useJsApiLoader","googleMapsApiKey","process","markerOnLoad","useCallback","useEffect","Geocode","setApiKey","setLanguage","setRegion","setLocationType","fromAddress","then","response","results","geometry","location","north","error","navigator","geolocation","getCurrentPosition","pos","crd","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","axios","url","method","data","query","animalTypeData","Section","SealSize","Sex","HowID","TagSide","TagColor","Status","Issue","Island","fast","Location","allSubanimals","forEach","obj","interge","length","push","options","info","family","allSectors","allSealsize","allSex","allHowId","allTagside","allTagcolor","allStatus","allDeath","allIsland","allFast","allLocation","document","getElementById","activeElement","style","transform","pictured","Reader","FileReader","onload","event","image","slice","target","result","readAsDataURL","file","name","onChange","placeholder","for","on","defaultCountry","onPlacesChanged","getElementsByName","mapContainerStyle","zoom","gestureHandling","position","draggable","onLoad","onDragEnd","bounds","accept","minWidth","incomingFiles","map","picture","key","onDelete","preview","Navbar","fixed","bg","Nav","onClick","console","log","JSON","stringify","Boolean","SubmitIncident","disabled","Basetemplate","loginShow","setLoginShow","password","setPassword","loginError","setLoginError","Modal","show","onHide","centered","closeButton","Title","Alert","Footer","errors","expand","Brand","Toggle","Collapse","Link","path","exact","CSVFile","Sealheaders","setFilter","sealTable","setSealTable","turtleTable","setTurtleTable","birdTable","setBirdTable","queryed","StartDate","EndDate","Seal","Turtle","Bird","seal","presented","Beach","AnimalPresent","BeachPosition","Date","Time","TicketNumber","TicketType","acronym","HotlineOperatorInitials","ObserverInitials","ObserverType","Sector","observerType","locationDetails","HowId","BleachNumber","TagNumber","IDPerm","String","Molt","IDDescription","IDVerifiedBy","SealLogging","MomPup","SRASetBy","VolunteersEngaged","SealDepart","SealDepartDate","SealDepartTime","incident","SeaTurtle","turtleData","onIsland","animalType","CauseOfDeath","Responder","ResponderLeft","ResponderArrived","OutreachProvided","SeaBird","seaBirdData","subAnimal","Delivered","WhereTo","overallStyle","filterBy","values","onSubmit","filterData","Tabs","defaultActiveKey","Tab","title","content","headers","minHeight","maxHeight","activateDownloadButton","pagination","renderLineNumber","reverseLineNumber","searchEnabled","sortColumn","topPagination","tableStyle","titleStyle","ticket","setTicket","ticketOPtions","setTicketOptions","setError","Ticket","allObserver","catch","Reoprts","setReports","setSubAnimal","animal","setAnimal","search","useLocation","pagNum","setPagNum","currentPag","setCurrentPag","useMemo","URLSearchParams","pag","get","Animal","SpecificAnimal","allAnimals","replace","PaginatedReport","Pagen","i","AmountOfPagination","b","parseFloat","Top","Bottom","Right","Left","Table","striped","bordered","hover","Pagination","active","DisplayData","ReportNumber","useParams","setData","singleReport","Carousel","animalImages","beachPosition","Usertemplate","invite","setInvite","setSuperUser","inviteUser","setInviteUser","inviteSuccess","setInviteSuccess","svg","createAvatar","seed","currentUser","isSuperuser","LastName","NavDropdown","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.36d120de.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst Section2 = (props) => {\r\n    return(\r\n        <div className=\"Section-2\">\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={6} md={12} sm={12}>\r\n                            <img className=\"section-img\" src={props.img} width=\"300px\" height=\"200px\" alt=\"Monk Seal\"/>\r\n                        </Col>\r\n                        <Col lg={6} md={12} sm={12}>\r\n                            <h2 className=\"Section-2-header\"><b>{props.header}</b></h2>\r\n                            <p className=\"Section-2-info\">\r\n                                {props.text}\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section2;","import React from 'react';\r\nimport './Home.scss';\r\nimport {Button, Container, Row, Col, Accordion} from 'react-bootstrap';\r\nimport Section2 from './Section-2'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"Section-1\">\r\n                <div>\r\n                    <h1 className=\"Header\">Make a Report</h1>\r\n                    <p className=\"Header\">If you feel like the animal is in danger please Click on Emergency<br/> This site allows you to report for Sea Turtles,<br/> Monk Seal, and Sea birds</p>\r\n                    <LinkContainer to=\"/ReportInfo\"><Button className=\"ReportButton\">File Report</Button></LinkContainer>\r\n                    <Button className=\"ReportButton\" variant=\"danger\" href={'tel:888-256-9840'}>Emergency</Button>\r\n                </div>\r\n            </div>\r\n            <Section2 text={\"The Hawaiian monk seal is one of the most endangered seal species in the world. The population overall had been declining for six decades and current numbers, though increasing, are only about one-third of historic population levels. Hawaiian monk seals are found in the Hawaiian archipelago which includes both the main and Northwestern Hawaiian Islands and rarely at Johnston Atoll which lies nearly 1,000 miles southwest of Hawai'i. These monk seals are endemic to these islands, occurring nowhere else in the world. Hawaiian monk seals are protected under the Endangered Species Act, the Marine Mammal Protection Act, and State of Hawai'i law.\"} header={'Monk Seal'} img={\"https://h-mar.org/wp-content/uploads/2018/12/Monk1-min-300x225.jpg\"}/>\r\n            <div className=\"Section-3\">\r\n                <div>\r\n                    <h1 className=\"Header\">Our Mission</h1>\r\n                    <h5>To undertake substantial actions that result in the preservation, recovery and stewardship of Hawaii’s marine protected species and the ocean ecosystem we share.</h5>\r\n                </div>\r\n            </div>\r\n            <Section2 text={\"The green turtle (Chelonia mydas) is listed as threatened under the Endangered Species Act and is found throughout the main Hawaiian Islands. Historically, green sea turtles were abundant and nested throughout the entire Hawaiian Archipelago. However, after European colonization (around 1819), the kapu prohibition system began to erode. During the 20th century, the numbers of Hawaiian sea turtles dropped precipitously as harvests intensified and became commercialized. In 1978, green turtles received protections under the Endangered Species Act (ESA) and harvest was prohibited.\"} header={\"Hawaii's Sea Turtles\"} img={\"https://h-mar.org/wp-content/uploads/2018/12/SeaTurtle-min-300x225.jpg\"}/>\r\n            <div className=\"Section-4\">\r\n                <div>\r\n                    <h1 className=\"Header\">Join our Team</h1>\r\n                    <Container>\r\n                    <h5>We are the largest Hawaii-based non-profit marine species response organization, covering the islands of Oahu and Molokai with our team of dedicated and hard-working volunteers, interns and staff. Our team spends thousands of hours each year responding to calls involving protected marine species such as Hawaiian monk seals, sea turtles and seabirds to provide shoreline response, stranding assistance, outreach, health management and rescue. Our work helps save these animals from deaths and injuries caused by hookings, entanglement, disease, and potentially dangerous or inappropriate interaction with humans and pets. This extensive presence in the field, combined with regular outreach and education activity in schools, community events and public venues allows us to engage with tens of thousands of people each year to build understanding, stewardship and support for Hawaii’s protected marine species and the coastal ecosystem we share.</h5>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n            <Section2 text={\"There are many different types of seabirds in Hawaii. People of Hawaii have used seabirds to find fish, for navigation and for clues to changes in weather. often young seabirds stay near their nests or burrows and should be left alone.\"} header={\"Seabirds\"} img={\"https://h-mar.org/wp-content/uploads/2019/06/Bird-300x225.jpg\"}/>\r\n            <div className=\"Section-5\">\r\n                <h1>FAQ:</h1>\r\n                <Container>\r\n                    <Accordion>\r\n                        <Accordion.Item eventKey=\"0\">\r\n                            <Accordion.Header>How do I make a Report?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                            <b>There are two ways to make a report:</b><br/>\r\n                            <b>1.</b> If it is an emergency click on the emergency button on the top. This will get you in contact with one of our operators who will be on the line with you\r\n                            to make this report.<br/>\r\n                            <b>2.</b> Press the Fill out report button on the top of this website. Once clicked fill out the form to the best of your knowledge\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"1\">\r\n                            <Accordion.Header>What is a Tag?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                            Tags are identifiers place on animals to help identify them. This can be done with bleach, or actual tags.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                        <Accordion.Item eventKey=\"2\">\r\n                            <Accordion.Header>When is something deemed an an emergency?</Accordion.Header>\r\n                            <Accordion.Body>\r\n                            Emergencies depend on the situation. If at any point you are unsure if something is an emergency please use the emergency feature any way.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                </Container>\r\n            </div>\r\n            <div className=\"Footer\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                        <p>© 2020 Hawaii Marine Animal Response All rights reserved</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <a href=\"https://www.facebook.com/HawaiiMarineAnimalResponse/\"><i className=\"logofooter fab fa-facebook-f fa-lg\"></i></a>\r\n                            <a href=\"https://www.instagram.com/hawaiimarineanimalresponse/\"><i class=\"logofooter fab fa-instagram fa-lg\"></i></a>\r\n                            <a href=\"https://twitter.com/HIMarineAnimal\"><i className=\"logofooter fab fa-twitter fa-lg\"></i></a>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {Nav, Navbar, Container, Button, Row, Col} from 'react-bootstrap';\r\nimport {GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker, Rectangle} from '@react-google-maps/api';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport Geocode from \"react-geocode\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport { Dropzone, FileItem } from \"@dropzone-ui/react\";\r\nimport axios from \"axios\";\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-phone-number-input/style.css';\r\nimport './report.scss';\r\nrequire('dotenv').config();\r\n\r\n\r\nconst FileReport = () => {\r\n    const [phone, setPhone] = useState(null);\r\n    const [marker, setMarker] = useState({lat:null, lng:null})\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [mapSearch, setMapSearch] = useState('None');\r\n    const [pictures, setPicture] = useState([])\r\n    const [images, setImages] = useState([])\r\n    const [animalsType, setAnimalsType] = useState([])\r\n    const [submitQuery, setSubmitQuery] = useState(true)\r\n    const [description, setDescription] = useState('')\r\n    const [sector, setSector] = useState('')\r\n    const [locationDescription, setLocationDescription] = useState('')\r\n    const [animalPresent, setAnimalPresent] = useState(null)\r\n    const [sealSize, setSealSize] = useState(null)\r\n    const [sex, setSex] = useState(null)\r\n    const [landWater, setLandwater] = useState(null)\r\n    const [IDedType, setIdType] = useState(null)\r\n    const [tagedSide, setTagedSide] = useState(null)\r\n    const [tagColor, setTagColor] = useState(null)\r\n    const [tagNumber, setTagNumber] = useState(null)\r\n    const [bleachNum, setBleachNum] = useState(null)\r\n    const [IdPerm, setIdPerm] = useState(null)\r\n    const [IdDescription, setIdDescription] = useState(null)\r\n    const [molting, setMolting] = useState(null)\r\n    const [sealLogging, setSealLogging] = useState(null)\r\n    const [momPup, setMomPup] = useState(null)\r\n    const [SRASetUp, setSRASetUp] = useState(null)\r\n    const [sealDepart, setSealDepart] = useState(null)\r\n    const [size, setSize] = useState(null)\r\n    const [status, setStatus] = useState(null)\r\n    const [issue, setIssue] = useState(null)\r\n    const [island, setIsland] = useState(null)\r\n    const [FAST, setFAST] = useState(null)\r\n    const [SRAName, setSRAName] = useState(null)\r\n    const [departDate, setDepartDate] = useState(null)\r\n    const [departTime, setDepartTime] = useState(null)\r\n    const [delivered, setDeleivered] = useState(null)\r\n    const [outReach, setOutReach] = useState(null)\r\n    const [deliveryLocation, setDeliveryLocation] = useState(null)\r\n    const [responderName, SetResponderName] = useState('')\r\n    const [amountOfResponder, setAmountOfResponder] = useState(null)\r\n    const [timeArrived, setTimeArrived] = useState(null)\r\n    const [timeLeft, setTimeLeft] = useState(null)\r\n\r\n    const [center, setCenter] = useState({lat: 19.8968, lng:155.5828});\r\n    const [markerMount, setMarkerMount] = useState()\r\n    const [shape, setShape] = useState({coords: {norht: null, south: null, east:null, west: null}, type:'square'})\r\n    const [libraries] = useState([\"places\"])\r\n    const [animaloptions, setAnimalOptions] = useState([])\r\n    const [responderPresent, setResponderPresent] = useState(false)\r\n    const [sectorOptions, setSectorOptions] = useState([])\r\n    const [sealSizeOption, setSealSizeOption] = useState([])\r\n    const [sexOptions, setSexOptions] = useState([])\r\n    const [howIdOption, setHowIdOption] = useState([])\r\n    const [tagSideOption, setTagSideOption] = useState([])\r\n    const [tagColorOption, setTagColorOption] = useState([])\r\n    const [statusOption, setStatusOption] = useState([])\r\n    const [issueOption, setIssueOption] = useState([])\r\n    const [islandOption, setIslandOption] = useState([])\r\n    const [FASTOption, setFASTOption] = useState([])\r\n    const [locationOption, setLocationOption] = useState([])\r\n    const history = useHistory()\r\n\r\n    const SubmitIncident = () => {\r\n        console.log(images)\r\n        let value = `\r\n        mutation add_Incident{\r\n            addIncident(`\r\n        value += `firstName:${JSON.stringify(firstName)}, lastName:${JSON.stringify(lastName)}, phoneNumber:${JSON.stringify(phone)}, email:${JSON.stringify(email)}, location:${JSON.stringify(mapSearch)}, lat:${JSON.stringify(marker.lat)}, lng:${JSON.stringify(marker.lng)}, locationDescription:${JSON.stringify(locationDescription)}, sector:${JSON.stringify(sector.value)}, animalType:${JSON.stringify(animalsType.value)}, animalPresent:${JSON.stringify(animalPresent)}`\r\n        if (sealSize !== null)\r\n        {\r\n            value += `, sealSize:${JSON.stringify(sealSize)}`\r\n        }\r\n        if (sex !== null)\r\n        {\r\n            value += `, sex:${JSON.stringify(sex)}`\r\n        }\r\n        if (landWater !== null)\r\n        {\r\n            value += `, landOrWater:${JSON.stringify(Boolean(landWater))}`\r\n        }\r\n        if (IDedType !== null)\r\n        {\r\n            value += `, howIdentified:${JSON.stringify(IDedType)}`\r\n        }\r\n        if (tagedSide !== null)\r\n        {\r\n            value += `, tagSide:${JSON.stringify(tagedSide)}`\r\n        }\r\n        if (tagColor !== null)\r\n        {\r\n            value += `, tagColor:${JSON.stringify(tagColor)}`\r\n        }\r\n        if (tagNumber !== null)\r\n        {\r\n            value += `, tagNumber:${JSON.stringify(tagNumber)}`\r\n        }\r\n        if (bleachNum !== null)\r\n        {\r\n            value += `, bleachNum:${JSON.stringify(bleachNum)}`\r\n        }\r\n        if (IdPerm !== null)\r\n        {\r\n            value += `, IDPerm:${JSON.stringify(IdPerm)}`\r\n        }\r\n        if (IdDescription !== null)\r\n        {\r\n            value += `, IDNotes:${JSON.stringify(IdDescription)}`\r\n        }\r\n        if (molting !== null)\r\n        {\r\n            value += `, molting:${JSON.stringify(molting)}`\r\n        }\r\n        if (sealLogging !== null)\r\n        {\r\n            value += `, sealLogging:${JSON.stringify(sealLogging)}`\r\n        }\r\n        if (momPup !== null)\r\n        {\r\n            value += `, animalWithBaby:${JSON.stringify(momPup)}`\r\n        }\r\n        if (sealDepart !== null)\r\n        {\r\n            value += `, sealDeparted:${JSON.stringify(sealDepart)}`\r\n        }\r\n        if (SRAName !== null)\r\n        {\r\n            value += `, SRAPerson:${JSON.stringify(SRAName)}`\r\n        }\r\n        if (departDate !== null)\r\n        {\r\n            value += `, dateDeparted:${JSON.stringify(departDate)}`\r\n        }\r\n        if (departTime !== null)\r\n        {\r\n            value += `, timeDeparted:${JSON.stringify(departTime)}`\r\n        }\r\n        if (size !== null)\r\n        {\r\n            value += `, turtleSize:${JSON.stringify(size)}`\r\n        }\r\n        if (FAST !== null)\r\n        {\r\n            value += `, FAST:${JSON.stringify(FAST)}`\r\n        }\r\n        if (status !== null)\r\n        {\r\n            value += `, status:${JSON.stringify(status)}`\r\n        }\r\n        if (issue !== null)\r\n        {\r\n            value += `, issue:${JSON.stringify(issue)}`\r\n        }\r\n        if (delivered !== null)\r\n        {\r\n            value += `, delivered:${JSON.stringify(delivered)}`\r\n        }\r\n        if (deliveryLocation !== null)\r\n        {\r\n            value += `, deliverdLocation:${JSON.stringify(deliveryLocation)}`\r\n        }\r\n        if (outReach !== null)\r\n        {\r\n            value += `, OperatorOutReach:${JSON.stringify(outReach)}`\r\n        }\r\n        if (island !== null)\r\n        {\r\n            value += `, onIsland:${JSON.stringify(island)}`\r\n        }\r\n        if (responderName !== null)\r\n        {\r\n            value += `, responderName:${JSON.stringify(responderName)}`\r\n        }\r\n        if (amountOfResponder !== null)\r\n        {\r\n            value += `, amountOfResponders:${JSON.stringify(amountOfResponder)}`\r\n        }\r\n        if (timeArrived !== null)\r\n        {\r\n            value += `, timeArrived:${JSON.stringify(timeArrived)}`\r\n        }\r\n        if (timeLeft !== null)\r\n        {\r\n            value += `, timeLeft:${JSON.stringify(timeLeft)}`\r\n        }\r\n        value += `, description:${JSON.stringify(description)}, images:${JSON.stringify(images)}){succcesses}}`\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: value\r\n            }\r\n        }).then((results)=> {\r\n            history.push('/')\r\n            \r\n        })\r\n    }\r\n    const updateFiles = (incomingFiles) => {\r\n        setPicture(incomingFiles)\r\n    };\r\n\r\n    const Present = [{value: true, label:'Yes'}, {value: false, label:'No'}]\r\n    const LandWaterOptions = [{value:true, label:'Land'}, {value:false, label:'Water'}]\r\n\r\n    const removeFile = (id) => {\r\n        setPicture(pictures.filter((x) => x.id !== id));\r\n    };\r\n    \r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google=map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n        libraries: libraries,\r\n    })\r\n    const MapHandling = {\r\n        gestureHandling: 'greedy',\r\n    }\r\n\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '400px',\r\n    };\r\n\r\n    const markerOnLoad = useCallback((marker) => {\r\n        setMarkerMount(marker)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(mapSearch !== 'None'){\r\n            Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAP_API_KEY);\r\n            Geocode.setLanguage(\"en\");\r\n            Geocode.setRegion(\"us\");\r\n            Geocode.setLocationType(\"ROOFTOP\");\r\n            Geocode.fromAddress(mapSearch).then(\r\n                (response) => {\r\n                    const { lat, lng } = response.results[0].geometry.location;\r\n                    setCenter({\r\n                        lat: lat,\r\n                        lng: lng,\r\n                    });\r\n                    setMarker({\r\n                        lat: lat,\r\n                        lng: lng,\r\n                    })\r\n                    setShape({north: lat+0.0005, south: lat-0.0005, east:lng+0.0005, west: lng-0.0005})\r\n                },\r\n                (error) => {\r\n                }\r\n            );\r\n\r\n        }\r\n    }, [mapSearch])\r\n    useEffect(() => {\r\n        const options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n        const success = (pos) => {\r\n            var crd = pos.coords;\r\n            setCenter({lat:crd.latitude, lng:crd.longitude});\r\n        }\r\n        const error = (err) => {\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n        function fetchFormData() {\r\n            axios({\r\n                url:'/api/',\r\n                method: 'post',\r\n                data: {\r\n                    query: `\r\n                        query getForm{\r\n                            allSubanimals{\r\n                                subAnimal\r\n                                animal{\r\n                                    animal\r\n                                }\r\n                            }\r\n                            allSectors{\r\n                                observerType\r\n                            }\r\n                            allStatus{\r\n                                options\r\n                            }\r\n                            allDeath{\r\n                                options\r\n                            }\r\n                            allIsland{\r\n                                island\r\n                            }\r\n                            allSealsize{\r\n                                options\r\n                            }\r\n                            allSex{\r\n                                options\r\n                            }\r\n                            allHowId{\r\n                                options\r\n                            }\r\n                            allTagside{\r\n                                options\r\n                            }\r\n                            allTagcolor{\r\n                                options\r\n                            }\r\n                            allFast{\r\n                                options\r\n                            }\r\n                            allLocation{\r\n                                options\r\n                            }\r\n                        }\r\n                    `\r\n                }\r\n            }).then((results)=> {\r\n                let animalTypeData = []\r\n                let Section = []\r\n                let SealSize = []\r\n                let Sex = []\r\n                let HowID = []\r\n                let TagSide = []\r\n                let TagColor = []\r\n                let Status = []\r\n                let Issue = []\r\n                let Island = []\r\n                let fast = []\r\n                let Location = []\r\n                results.data.data.allSubanimals.forEach((obj) => {\r\n                    let interge = true\r\n                    if (animalTypeData.length === 0){\r\n                        animalTypeData.push({label: obj['animal']['animal'], options:[]})\r\n                    }\r\n                    else{\r\n                        animalTypeData.forEach((x) => {\r\n                            if (x.label === obj['animal']['animal']){\r\n                                interge = false\r\n                            }\r\n                        })\r\n                        if(interge){\r\n                            animalTypeData.push({label: obj['animal']['animal'], options:[]})\r\n                        }\r\n                    }\r\n                    animalTypeData.forEach((info) => {\r\n                        if(info['label'] === obj['animal']['animal']){\r\n                            info['options'].push({ value: obj['subAnimal'], label: obj['subAnimal'], family:obj['animal']['animal']})\r\n                        }\r\n                    })\r\n                })\r\n                results.data.data.allSectors.forEach((obj) => {\r\n                    Section.push({value:obj['observerType'], label:obj['observerType']})\r\n                })\r\n                results.data.data.allSealsize.forEach((obj) => {\r\n                    SealSize.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allSex.forEach((obj) => {\r\n                    Sex.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allHowId.forEach((obj) => {\r\n                    HowID.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allTagside.forEach((obj)=>{\r\n                    TagSide.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allTagcolor.forEach((obj) => {\r\n                    TagColor.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allStatus.forEach((obj) => {\r\n                    Status.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allDeath.forEach((obj) => {\r\n                    Issue.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allIsland.forEach((obj)=>{\r\n                    Island.push({value: obj['island'], label:obj['island']})\r\n                })\r\n                results.data.data.allFast.forEach((obj) => {\r\n                    fast.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                results.data.data.allLocation.forEach((obj) => {\r\n                    Location.push({value: obj['options'], label:obj['options']})\r\n                })\r\n                setAnimalOptions(animalTypeData)\r\n                setSectorOptions(Section)\r\n                setSealSizeOption(SealSize)\r\n                setSexOptions(Sex)\r\n                setHowIdOption(HowID)\r\n                setTagSideOption(TagSide)\r\n                setTagColorOption(TagColor)\r\n                setFASTOption(fast)\r\n                setIslandOption(Island)\r\n                setIssueOption(Issue)\r\n                setStatusOption(Status)\r\n                setLocationOption(Location)\r\n            })\r\n        }\r\n        fetchFormData()\r\n    }, []);\r\n    useEffect(() => {\r\n        if(phone != null || document.getElementById('phoneField') === document.activeElement){\r\n            document.getElementById('phoneLabel').style.transform = \"translateY(-4rem) scale(0.8)\";\r\n        }\r\n        else{\r\n            document.getElementById('phoneLabel').style.transform = null;\r\n        }\r\n    }, [phone]);\r\n\r\n    useEffect(()=>{\r\n        if(phone !== null){\r\n            if(marker !== {lat:null, lng:null}){\r\n                if(firstName !== ''){\r\n                    if(lastName !== ''){\r\n                        if(email !== ''){\r\n                            if(mapSearch !== 'None'){\r\n                                if(pictures.length > 0){\r\n                                    if(description !== ''){\r\n                                        setSubmitQuery(false)\r\n                                    }\r\n                                    else{\r\n                                        setSubmitQuery(true)\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    setSubmitQuery(true)\r\n                                }\r\n                            }\r\n                            else{\r\n                                setSubmitQuery(true)\r\n                            }\r\n                        }\r\n                        else{\r\n                            setSubmitQuery(true)\r\n                        }\r\n                    }\r\n                    else{\r\n                        setSubmitQuery(true)\r\n                    }\r\n                }\r\n                else{\r\n                    setSubmitQuery(true)\r\n                }\r\n            }\r\n            else{\r\n                setSubmitQuery(true)\r\n            }\r\n        }\r\n        else{\r\n            setSubmitQuery(true)\r\n        }\r\n        if (pictures.length > 0){\r\n            let pictured = []\r\n            for(var x = 0; x < pictures.length; x++){\r\n                let Reader = new FileReader();\r\n                Reader.onload = function (event) {\r\n                    let image = pictures.slice();\r\n                    image.push(event.target.result);\r\n                    pictured.push(image[pictures.length])\r\n                    \r\n                };\r\n                Reader.readAsDataURL(pictures[x].file);\r\n            }\r\n            setImages(pictured)\r\n        }\r\n    }, [phone, marker, firstName, lastName, email, mapSearch, pictures, description])\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <div className=\"mt-6 mb-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" name=\"first name\" value={firstName} onChange={(event) => {setFirstName(event.target.value)}} type=\"text\" placeholder=\" \"/>\r\n                                <label for=\"first name\" className=\"label\">First Name</label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" value={lastName} onChange={(event) => {setLastName(event.target.value)}} name=\"last name\" type=\"text\" placeholder=\" \"/>\r\n                                <label for=\"last name\" className=\"label\">Last Name</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div id=\"phoneField\" on className=\"field\">\r\n                                <PhoneInput defaultCountry=\"US\" onChange={(x) => {\r\n                                    setPhone(x)\r\n                                }} name=\"phone number\" value={phone} placeholder=\" \"/>\r\n                                <label for=\"phone number\" id={\"phoneLabel\"} className=\"phonelabel\">Phone Number</label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" value={email} onChange={(event) => {setEmail(event.target.value)}} name=\"email\" type=\"email\" placeholder=\" \"/>\r\n                                <label for=\"email\" className=\"label\">Email</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoaded && <StandaloneSearchBox onPlacesChanged={(value) => {\r\n                            if(document.getElementsByName('Location')[0].value !== '') {\r\n                                setMapSearch(document.getElementsByName('Location')[0].value)\r\n                            }\r\n                            else{\r\n                                setMapSearch('')\r\n                            }\r\n                            }}>\r\n                                <div className=\"field\">\r\n                                    <input className=\"input\" name=\"Location\" type=\"text\" placeholder=\" \"/>\r\n                                    <label for=\"Location\" className=\"label\">Location</label>\r\n                                </div>\r\n                            </StandaloneSearchBox>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field more-border\">\r\n                                <textarea className=\"input\" value={locationDescription} onChange={(event) => {setLocationDescription(event.target.value)}} name=\"LocationDes\" placeholder=\" \"/>\r\n                                <label for=\"LocationDes\" className=\"label\">Location Description...</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoaded && <GoogleMap\r\n                            mapContainerStyle={containerStyle}\r\n                            center={center}\r\n                            zoom={15}\r\n                            options={MapHandling}>\r\n                                <Marker position={marker} draggable={true} onLoad={markerOnLoad} onDragEnd={()=>{\r\n                                    setMarker({lat: markerMount.position.lat(), lng: markerMount.position.lng()})\r\n                                    setShape({north: markerMount.position.lat()+0.0005, south: markerMount.position.lat()-0.0005, east:markerMount.position.lng()+0.0005, west: markerMount.position.lng()-0.0005})\r\n                                    }}/>\r\n                                <Rectangle onload bounds={shape}/>\r\n                            </GoogleMap>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-5 mb-5\">\r\n                        <Col>\r\n                            <Select className=\"bringUp5\" options={sectorOptions} onChange={(info)=>setSector(info)} name=\"animal\" placeholder=\"Sector\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp5\" options={animaloptions} name=\"animal\" onChange={(info)=>setAnimalsType(info)} placeholder=\"Animal Type...\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp5\" options={Present} onChange={(info)=>{setAnimalPresent(info.value)}} name=\"animal\" placeholder=\"Animal Present\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {animalsType.family === 'Seal' && \r\n                        <div>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={sealSizeOption} onChange={(info)=>{setSealSize(info.value)}} name=\"animal\" placeholder=\"Seal Size\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={sexOptions} onChange={(info)=>{setSex(info.value)}} name=\"animal\" placeholder=\"Sex\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={LandWaterOptions} onChange={(info)=>{setLandwater(info.value)}} name=\"animal\" placeholder=\"On Land or Water\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={howIdOption} onChange={(info)=>{setIdType(info.value)}} name=\"animal\" placeholder=\"How Identified\" />\r\n                                </Col>\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={tagSideOption} onChange={(info)=>{setTagedSide(info.value)}} name=\"animal\" placeholder=\"Tag Side\" />\r\n                                </Col>}\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={tagColorOption} onChange={(info)=>{setTagColor(info.value)}} name=\"animal\" placeholder=\"Tag Color\" />\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row>\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={tagNumber} onChange={(event) => {setTagNumber(event.target.value)}} name=\"TagNumber\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"TagNumber\" className=\"label\">Tag Number</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {IDedType === 'Applied bleach' &&\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={bleachNum} onChange={(event) => {setBleachNum(event.target.value)}} name=\"BleachNum\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"BleachNum\" className=\"label\">ID Temp (Bleach#)</label>\r\n                                    </div>\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={IdPerm} onChange={(event) => {setIdPerm(event.target.value)}} name=\"IDPerm\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"IDPerm\" className=\"label\">ID Perm</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={IdDescription} onChange={(event) => {setIdDescription(event.target.value)}} name=\"IDNotes\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"IDNotes\" className=\"label\">Additional Notes on ID</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event) => {setMolting(event.value)}}name=\"animal\" placeholder=\"Molting\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event)=>{setSealLogging(event.value)}} name=\"animal\" placeholder=\"Seal Logging\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event)=>{setMomPup(event.value)}} name=\"animal\" placeholder=\"Mom and Pup pair\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setSRASetUp(event.value)}} name=\"animal\" placeholder=\"SRA Set up\"/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setSealDepart(event.value)}} name=\"animal\" placeholder=\"Seal Departed\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {SRASetUp && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={SRAName} onChange={(event) => {setSRAName(event.target.value)}} name=\"SetUp\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"SetUp\" className=\"label\">SRA Set Up By</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {sealDepart && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={departDate} onChange={(event) => {setDepartDate(event.target.value)}} name=\"dateDeparted\" type=\"date\" placeholder=\" \"/>\r\n                                        <label for=\"dateDeparted\" className=\"label\">Date Departed</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {sealDepart && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={departTime} onChange={(event) => {setDepartTime(event.target.value)}} name=\"TimeDeparted\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeDeparted\" className=\"label\">Time Departed</label>\r\n                                    </div>\r\n                                </Col>}\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    {animalsType.family === 'Sea Turtle' && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={size} onChange={(event) => {setSize(event.target.value)}} name=\"tutleSize\" type=\"number\" placeholder=\" \"/>\r\n                                        <label for=\"tutleSize\" className=\"label\">Size of tutle(in Feet)</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp1\" options={statusOption} onChange={(event) => {setStatus(event.value)}} name=\"animal\" placeholder=\"Status\"/>\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp\" options={issueOption} onChange={(event) => {setIssue(event.value)}} name=\"animal\" placeholder=\"Issue or Cause of Death\"/>\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp-1\" options={islandOption} onChange={(event) => {setIsland(event.value)}} name=\"animal\" placeholder=\"On What Island\" />\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp-2\" options={FASTOption} onChange={(event) => {setFAST(event.value)}} name=\"animal\" placeholder=\"F.A.S.T\" />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        \r\n                    }\r\n                    {animalsType.family === 'Sea Birds' && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setDeleivered(event.value)}} name=\"animal\" placeholder=\"Delivered\"/>\r\n                                </Col>\r\n                                {delivered && <Col>\r\n                                    <Select className=\"bringUp1\" options={locationOption} onChange={(event)=>{setDeliveryLocation(event.value)}} name=\"animal\" placeholder=\"Delivered\"/>\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                \r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp-3\" options={Present} name=\"VolunteerPresent\" onChange={(info)=>setResponderPresent(info.value)} placeholder=\"Responders/Volunteers Present\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp-3\" options={Present} onChange={(event)=>{setOutReach(event.value)}} name=\"animal\" placeholder=\"OutReach Provided by Operator\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {responderPresent && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={responderName} onChange={(event) => {SetResponderName(event.target.value)}} name=\"ResponderName\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"ResponderName\" className=\"label\">Responders Name</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={amountOfResponder} onChange={(event) => {setAmountOfResponder(event.target.value)}} name=\"Amount of Volunteer / Responders\" type=\"number\" placeholder=\" \"/>\r\n                                        <label for=\"Amount of Volunteer / Responders\" className=\"label\">Amount of Responders</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={timeArrived} onChange={(event) => {setTimeArrived(event.target.value)}} name=\"TimeArrived\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeArrived\" className=\"label\">Time Arrived</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={timeLeft} onChange={(event) => {setTimeLeft(event.target.value)}} name=\"TimeLeft\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeLeft\" className=\"label\">Time Left</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field more-border\">\r\n                                <textarea className=\"input\" value={description} onChange={(event) => {setDescription(event.target.value)}} name=\"MoreInfo\" placeholder=\" \"/>\r\n                                <label for=\"MoreInfo\" className=\"label\">Description ...</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Dropzone accept={'image/\\*'} style={{ minWidth: \"500px\" }} onChange={updateFiles} value={pictures}>\r\n                                {pictures.map((picture, key)=>{\r\n                                    return(<FileItem {...picture} onDelete={removeFile} preview info key={picture.id}/>)\r\n                                })}\r\n                            </Dropzone>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Navbar fixed=\"bottom\" bg=\"light\">\r\n                <Container>\r\n                    <h4>When finished you will be allowed to click Submit</h4>\r\n                    <Nav className=\"ms-auto\">\r\n                        <Button className=\"float-right\" onClick={()=>SubmitIncident()} disabled={submitQuery} variant=\"success\">Submit</Button>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReport;","import {Navbar, Nav, Container, Button, Modal, Alert} from 'react-bootstrap';\r\nimport React, {useState} from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './footer.scss';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport Home from '../Template/BaseTemplate/Home/Home';\r\nimport FileReport from '../Template/BaseTemplate/Reports/Report';\r\n\r\n\r\nconst Basetemplate = () => {\r\n    const[loginShow, setLoginShow] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory()\r\n    const [loginError, setLoginError] = useState(false)\r\n\r\n    const Login = () => {\r\n        console.log('yes')\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n                    mutation tokenAuth {\r\n                        tokenAuth(email: ${JSON.stringify(email)}, password: ${JSON.stringify(password)}) {\r\n                        user {\r\n                            firstName\r\n                        }\r\n                        }\r\n                    }\r\n                `\r\n            }\r\n        }).then((results)=> {\r\n            if(results.data.errors){\r\n                setLoginError(true)\r\n            }\r\n            else{\r\n                history.push('/User?pagination=1')\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    const Close = () => setLoginShow(false)\r\n    const Show = () => {\r\n        console.log('working')\r\n        setLoginShow(true)}\r\n\r\n    return(\r\n        <div>\r\n            <Modal show={loginShow} onHide={Close} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        {loginError && <Alert variant={'danger'}>Your password or username is wrong please try again</Alert>}\r\n                        <div className=\"field\">\r\n                            <input type=\"email\" value={email} onChange={(x) => setEmail(x.target.value)} name=\"email\" className=\"input\" placeholder=\"\"/>\r\n                            <label for=\"email\" className=\"label\">Email</label>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"password\" value={password} onChange={(x) => setPassword(x.target.value)} className=\"input\" placeholder=\"\"/>\r\n                            <label for=\"password\" className=\"label\">Password</label>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <LinkContainer to=\"/ForgotPassword\"><a>Forget Your Password?</a></LinkContainer>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={()=>Login()}>Login</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <img src=\"https://www.mauibath.com/wp-content/uploads/2019/10/596998840197290025-300x300.png\" className=\"d-inline-block align-top\" width=\"50\" height=\"50\" alt=\"HMAR logo\"/>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ms-auto\">\r\n                            <LinkContainer to=\"/\">\r\n                                <Nav.Link>Home</Nav.Link>\r\n                            </LinkContainer>\r\n                            <Button variant=\"light\" onClick={Show}>Login</Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <Switch>\r\n                <Route path='/' exact={true}>\r\n                    <Home/>\r\n                </Route>\r\n                <Route path=\"/ReportInfo\" exact={true}>\r\n                    <FileReport/>\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <h1 className=\"mt-6\">404 Error: Page does not exist</h1>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Basetemplate;","import React, {useEffect, useState} from 'react';\r\nimport TableViewer from 'react-js-table-with-csv-dl';\r\nimport {Container, Row, Col, Tabs, Tab} from 'react-bootstrap';\r\nimport Filter from 'react-searchable-filter';\r\nimport {useHistory, useLocation } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nconst CSVFile = () => {\r\n\r\n\r\n    const Sealheaders = [\"Date\", \"Time\", \"Ticket Number\", \"Hotline Operator Initials\", \"Ticket Type\", \"Observer\", \"Observer Contact Number\", \"Observer Initials\", \"Observer Type\", \"Sector\", \"Location\", \"Location Notes\", \"Seal Present?\", \"Size\", \"Sex\", \"Beach Position\", \"How Identified?\", \"ID Temp (Bleach #)\", \"Tag Number\", \"Tag Side\", \"Tag Color\", \"ID Perm\", \"Molt\", \"Additional Notes on ID\", \"ID Verified By\", \"Seal Logging\", \"Mom & Pup Pair\", \"SRA Set Up\", \"SRA Set By\", \"# of Volunteers Engaged\", \"Seal Depart Info Avail?\", \"Seal Departed Date\", \"Seal Departed Time\", \"Number of Calls Received\", \"Other Notes\"];\r\n    const TurtleHeaders = [\"Date\", \"Time\", \"Ticket Number\", \"Hotline Operator intials\", \"Ticket Type\", \"Observer\", \"Phone number\", \"Observer Initials\", \"Observer Type\", \"Island\", \"Sector\", \"Beach/location\", \"Location Notes\", \"Type of Turtle\", \"Size\", \"Status (deceased or alive)\", \"Primary issue or cause of death\", \"Responder (only when response is needed)\", \"Time responder left\", \"Responder arrival time\", \"Outreach provided by operator\", \"F.A.S.T\", \"Number of calls received\", \"Other notes\"]\r\n    const BirdHeaders = [\"Date\", \"Time\", \"Ticket Number\", \"Hotline Operator intials\", \"Ticket Type\", \"Observer\", \"Phone number\", \"Observer Initials\", \"Observer Type\", \"Sector\", \"Location\", \"Location Notes\", \"Type of Bird\", \"Responder's name\", \"Delivered\", \"Where to?\", \"Outreach provided by operator\", \"Number of calls received\", \"Other notes\"]\r\n    const [filter, setFilter] = useState({})\r\n    const [sealTable, setSealTable] = useState([])\r\n    const [turtleTable, setTurtleTable] = useState([])\r\n    const [birdTable, setBirdTable] = useState([])\r\n    const [animal, setAnimal] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        let queryed = `query dataCSV{\r\n            seal:allFilterreports(Animals:\"Seal\"`\r\n        if (filter.StartDate){\r\n            queryed += `, StartDate:${JSON.stringify(filter.StartDate)}`\r\n        }\r\n        if (filter.EndDate){\r\n            queryed += `, EndDate:${JSON.stringify(filter.EndDate)}`\r\n        }\r\n        queryed+=`){\r\n              Date\r\n              Time\r\n              TicketNumber\r\n              HotlineOperatorInitials\r\n              TicketType{\r\n                acronym\r\n              }\r\n              firstName\r\n              phone\r\n              ObserverInitials\r\n              ObserverType{\r\n                acronym\r\n              }\r\n              Sector{\r\n                observerType\r\n              }\r\n              location\r\n              locationDetails\r\n              lat\r\n              lng\r\n              AnimalPresent\r\n              SealSize{\r\n                acronym\r\n              }\r\n              sex{\r\n                options\r\n              }\r\n              beachPosition\r\n              HowId{\r\n                acronym\r\n              }\r\n              BleachNumber\r\n              TagNumber\r\n              TagSide{\r\n                options\r\n              }\r\n              TagColor{\r\n                options\r\n              }\r\n              IDPerm\r\n              Molt\r\n              IDDescription\r\n              IDVerifiedBy\r\n              SealLogging\r\n              MomPup\r\n              SRASetUp\r\n              SRASetBy\r\n              VolunteersEngaged\r\n              SealDepart\r\n              SealDepartDate\r\n              SealDepartTime\r\n              incident{\r\n                firstName\r\n              }\r\n              description\r\n            }\r\n            SeaTurtle:allFilterreports(Animals:\"Sea Turtle\"`\r\n        if (filter.StartDate){\r\n            queryed += `, StartDate:${JSON.stringify(filter.StartDate)}`\r\n        }\r\n        if (filter.EndDate){\r\n            queryed += `, EndDate:${JSON.stringify(filter.EndDate)}`\r\n        }\r\n        queryed+=`){\r\n              Date\r\n              Time\r\n              TicketNumber\r\n              HotlineOperatorInitials\r\n              TicketType{\r\n                acronym\r\n              }\r\n              firstName\r\n              phone\r\n              ObserverInitials\r\n              ObserverType{\r\n                acronym\r\n              }\r\n              onIsland{\r\n                island\r\n              }\r\n              Sector{\r\n                observerType\r\n              }\r\n              location\r\n              lat\r\n              lng\r\n              locationDetails\r\n              animalType{\r\n                acronym\r\n              }\r\n              size\r\n              status{\r\n                options\r\n              }\r\n              CauseOfDeath{\r\n                options\r\n              }\r\n              Responder\r\n              ResponderArrived\r\n              ResponderLeft\r\n              OutreachProvided\r\n              FAST{\r\n                options\r\n              }\r\n              incident{\r\n                firstName\r\n              }\r\n              description\r\n            }\r\n            SeaBird:allFilterreports(Animals:\"Sea Birds\"`\r\n        if (filter.StartDate){\r\n            queryed += `, StartDate:${JSON.stringify(filter.StartDate)}`\r\n        }\r\n        if (filter.EndDate){\r\n            queryed += `, EndDate:${JSON.stringify(filter.EndDate)}`\r\n        }\r\n        queryed+=`){\r\n              Date\r\n              Time\r\n              TicketNumber\r\n              HotlineOperatorInitials\r\n              TicketType{\r\n                acronym\r\n              }\r\n              firstName\r\n              phone\r\n              ObserverInitials\r\n              ObserverType{\r\n                acronym\r\n              }\r\n              Sector{\r\n                observerType\r\n              }\r\n              location\r\n              lat\r\n              lng\r\n              locationDetails\r\n              animalType{\r\n                subAnimal\r\n              }\r\n              Responder\r\n              Delivered\r\n              WhereTo{\r\n                options\r\n              }\r\n              OutreachProvided\r\n              incident{\r\n                firstName\r\n              }\r\n              description\r\n            }\r\n          }`\r\n        console.log(queryed)\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: queryed\r\n            }\r\n        }).then((results) => {\r\n            if(results.errors){\r\n              history.push(\"/User\")\r\n            }\r\n            let Seal = []\r\n            let Turtle = []\r\n            let Bird = []\r\n            results.data.data.seal.forEach((obj) => {\r\n                let presented = \"\"\r\n                let Beach = \"\"\r\n                if (obj.AnimalPresent){\r\n                    presented = \"Y\"\r\n                }\r\n                else{\r\n                    presented = \"N\"\r\n                }\r\n                if (obj.BeachPosition){\r\n                    Beach = \"1\"\r\n                }\r\n                else{\r\n                    Beach = \"0\"\r\n                }\r\n                console.log(obj)\r\n                let value = {\"Date\": obj.Date, \"Time\": obj.Time,\"Ticket Number\":obj.TicketNumber, \"Ticket Type\": obj.TicketType.acronym, \"Hotline Operator Initials\":obj.HotlineOperatorInitials, \"Observer\": obj.firstName, \"Observer Contact Number\":obj.phone, \"Observer Initials\":obj.ObserverInitials, \"Observer Type\": obj.ObserverType.acronym, \"Sector\":obj.Sector.observerType, \"Location\":obj.location, \"Location Notes\": \"lat: \"+ obj.lat + \", lng: \"+obj.lng+\", \"+obj.locationDetails, \"Seal Present?\":presented, \"Size\":obj.SealSize.acronym, \"Sex\":obj.sex.options, \"Beach Position\":Beach, \"How Identified?\": obj.HowId.acronym, \"ID Temp (Bleach#)\": obj.BleachNumber, \"Tag Number\": obj.TagNumber, \"Tag Side\": obj.TagSide, \"Tag Color\": obj.TagColor, \"ID Perm\": obj.IDPerm, \"Molt\":String(obj.Molt), \"Additional Notes on ID\":obj.IDDescription, \"ID Verified By\": obj.IDVerifiedBy, \"Seal Logging\": String(obj.SealLogging), \"Mom & Pup Pair\": String(obj.MomPup), \"SRA Set Up\":String(obj.SRASetUp), \"SRA Set By\":obj.SRASetBy, \"# of Volunteers Engaged\":obj.VolunteersEngaged, \"Seal Depart Info Avail?\": String(obj.SealDepart), \"Seal Departed Date\": obj.SealDepartDate, \"Seal Depart Time\": obj.SealDepartTime, \"Number of Calls Received\": obj.incident.length, \"Other Notes\": obj.description}\r\n                Seal.push(value)\r\n            })\r\n            results.data.data.SeaTurtle.forEach((obj)=>{\r\n                let turtleData = {\"Date\":obj.Date, \"Time\":obj.Time, \"Ticket Number\":obj.TicketNumber, \"Ticket Type\": obj.TicketType.acronym, \"Hotline Operator intials\":obj.HotlineOperatorInitials, \"Ticket Type\":obj.TicketType.acronym, \"Observer\": obj.firstName, \"Phone number\":obj.phone, \"Observer Initials\":obj.ObserverInitials, \"Observer Type\": obj.ObserverType.acronym, \"Island\":obj.onIsland.island, \"Sector\":obj.Sector.observerType, \"Beach/location\":obj.location, \"Location Notes\": \"lat: \"+ obj.lat + \", lng: \"+obj.lng+\", \"+obj.locationDetails, \"Type of Turtle\":obj.animalType.acronym, \"Size\":obj.size, \"Status (deceased or alive)\":obj.status.options, \"Primary issue or cause of death\":obj.CauseOfDeath.options, \"Responder (only when response is needed)\":obj.Responder, \"Time responder left\":obj.ResponderLeft, \"Responder arrival time\":obj.ResponderArrived, \"Outreach provided by operator\":String(obj.OutreachProvided), \"F.A.S.T\":obj.FAST.options, \"Number of calls received\":obj.incident.length, \"Other notes\":obj.description}\r\n                Turtle.push(turtleData)\r\n            })\r\n            results.data.data.SeaBird.forEach((obj)=>{\r\n                let seaBirdData = {\"Date\":obj.Date, \"Time\":obj.Time, \"Ticket Number\":obj.TicketNumber, \"Ticket Type\": obj.TicketType.acronym, \"Hotline Operator intials\":obj.HotlineOperatorInitials, \"Observer\": obj.firstName, \"Phone number\":obj.phone, \"Observer Initials\":obj.ObserverInitials, \"Observer Type\": obj.ObserverType.acronym, \"Sector\":obj.Sector.observerType, \"Location\":obj.location, \"Location Notes\":\"lat: \"+ obj.lat + \", lng: \"+obj.lng+\", \"+obj.locationDetails, \"Type of Bird\":obj.animalType.subAnimal, \"Responder's name\":obj.Responder, \"Delivered\":obj.Delivered, \"Where to?\":obj.WhereTo?obj.WhereTo.options:\"\", \"Outreach provided by operator\":String(obj.OutreachProvided), \"Number of calls received\":obj.incident.length, \"Other notes\":obj.description}\r\n                Bird.push(seaBirdData)\r\n            })\r\n            setSealTable(Seal)\r\n            setTurtleTable(Turtle)\r\n            setBirdTable(Bird)\r\n        })\r\n    }, [filter])\r\n\r\n    const data = [\r\n        {\r\n            filterBy: 'StartDate',\r\n            description: 'The start date you are looking for',\r\n            values: []\r\n        },\r\n        {\r\n            filterBy: 'EndDate',\r\n            values: [],\r\n            description: 'The end date you are looking for'   \r\n        },\r\n    ]\r\n    const submitHandler = (x) => {\r\n        let filterData = {}\r\n        x.forEach((x) => {\r\n            filterData[x.filterBy]=x.values[0]\r\n        })\r\n        setFilter(filterData)\r\n\r\n    }\r\n    let overallStyle = {\"width\":'100%'};\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h5>Filter</h5>\r\n                        <Filter options={data} onSubmit={submitHandler} placeholder='Filter Reports'/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Tabs defaultActiveKey=\"Seals\">\r\n                            <Tab eventKey=\"Seals\" title=\"Seals\">\r\n                                <TableViewer\r\n                                title=\"Seals\"\r\n                                content={sealTable}\r\n                                headers={Sealheaders}\r\n                                minHeight={0}\r\n                                maxHeight={400}\r\n                                activateDownloadButton={true}\r\n                                pagination={25}\r\n                                renderLineNumber\r\n                                reverseLineNumber\r\n                                searchEnabled\r\n                                sortColumn={\"Date\"}\r\n                                topPagination\r\n                                tableStyle={overallStyle}\r\n                                titleStyle={{'textAlign':'left'}}\r\n                                />\r\n                            </Tab>\r\n                            <Tab eventKey=\"Sea Turtles\" title=\"Sea Turtles\">\r\n                                <TableViewer\r\n                                title=\"Sea Turtles\"\r\n                                content={turtleTable}\r\n                                headers={TurtleHeaders}\r\n                                minHeight={0}\r\n                                maxHeight={400}\r\n                                activateDownloadButton={true}\r\n                                pagination={25}\r\n                                renderLineNumber\r\n                                reverseLineNumber\r\n                                searchEnabled\r\n                                sortColumn={\"Date\"}\r\n                                topPagination\r\n                                tableStyle={overallStyle}\r\n                                titleStyle={{'textAlign':'left'}}\r\n                                />\r\n                            </Tab>\r\n                            <Tab eventKey=\"Sea Birds\" title=\"Sea Birds\">\r\n                                <TableViewer\r\n                                title=\"Sea Birds\"\r\n                                content={birdTable}\r\n                                headers={BirdHeaders}\r\n                                minHeight={0}\r\n                                maxHeight={400}\r\n                                activateDownloadButton={true}\r\n                                pagination={25}\r\n                                renderLineNumber\r\n                                reverseLineNumber\r\n                                searchEnabled\r\n                                sortColumn={\"Date\"}\r\n                                topPagination\r\n                                tableStyle={overallStyle}\r\n                                titleStyle={{'textAlign':'left'}}\r\n                                />\r\n                            </Tab>\r\n                            <Tab eventKey=\"NOAA\" title=\"NOAA\">\r\n                                <TableViewer\r\n                                title=\"NOAA (Seals)\"\r\n                                content={sealTable}\r\n                                headers={Sealheaders}\r\n                                minHeight={0}\r\n                                maxHeight={400}\r\n                                activateDownloadButton={true}\r\n                                pagination={25}\r\n                                renderLineNumber\r\n                                reverseLineNumber\r\n                                searchEnabled\r\n                                sortColumn={\"Date\"}\r\n                                topPagination\r\n                                tableStyle={overallStyle}\r\n                                titleStyle={{'textAlign':'left'}}\r\n                                />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CSVFile;","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {Nav, Navbar, Container, Button, Row, Col, Alert} from 'react-bootstrap';\r\nimport {GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker, Rectangle} from '@react-google-maps/api';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport Geocode from \"react-geocode\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport { Dropzone, FileItem } from \"@dropzone-ui/react\";\r\nimport axios from \"axios\";\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-phone-number-input/style.css';\r\nimport './report.scss';\r\n\r\nconst FileReport = (props) => {\r\n    const [phone, setPhone] = useState(null);\r\n    const [marker, setMarker] = useState({lat:null, lng:null})\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [mapSearch, setMapSearch] = useState('None');\r\n    const [pictures, setPicture] = useState([])\r\n    const [images, setImages] = useState([])\r\n    const [animalsType, setAnimalsType] = useState([])\r\n    const [submitQuery, setSubmitQuery] = useState(true)\r\n    const [description, setDescription] = useState('')\r\n    const [sector, setSector] = useState('')\r\n    const [locationDescription, setLocationDescription] = useState('')\r\n    const [animalPresent, setAnimalPresent] = useState(null)\r\n    const [sealSize, setSealSize] = useState(null)\r\n    const [sex, setSex] = useState(null)\r\n    const [landWater, setLandwater] = useState(null)\r\n    const [IDedType, setIdType] = useState(null)\r\n    const [tagedSide, setTagedSide] = useState(null)\r\n    const [tagColor, setTagColor] = useState(null)\r\n    const [tagNumber, setTagNumber] = useState(null)\r\n    const [bleachNum, setBleachNum] = useState(null)\r\n    const [IdPerm, setIdPerm] = useState(null)\r\n    const [IdDescription, setIdDescription] = useState(null)\r\n    const [molting, setMolting] = useState(null)\r\n    const [sealLogging, setSealLogging] = useState(null)\r\n    const [momPup, setMomPup] = useState(null)\r\n    const [SRASetUp, setSRASetUp] = useState(null)\r\n    const [sealDepart, setSealDepart] = useState(null)\r\n    const [size, setSize] = useState(null)\r\n    const [status, setStatus] = useState(null)\r\n    const [issue, setIssue] = useState(null)\r\n    const [island, setIsland] = useState(null)\r\n    const [FAST, setFAST] = useState(null)\r\n    const [SRAName, setSRAName] = useState(null)\r\n    const [departDate, setDepartDate] = useState(null)\r\n    const [departTime, setDepartTime] = useState(null)\r\n    const [delivered, setDeleivered] = useState(null)\r\n    const [outReach, setOutReach] = useState(null)\r\n    const [deliveryLocation, setDeliveryLocation] = useState(null)\r\n    const [responderName, SetResponderName] = useState('')\r\n    const [amountOfResponder, setAmountOfResponder] = useState(null)\r\n    const [timeArrived, setTimeArrived] = useState(null)\r\n    const [timeLeft, setTimeLeft] = useState(null)\r\n    const [ticket, setTicket] = useState('')\r\n\r\n    const [center, setCenter] = useState({lat: 19.8968, lng:155.5828});\r\n    const [markerMount, setMarkerMount] = useState()\r\n    const [shape, setShape] = useState({coords: {norht: null, south: null, east:null, west: null}, type:'square'})\r\n    const [libraries] = useState([\"places\"])\r\n    const [animaloptions, setAnimalOptions] = useState([])\r\n    const [responderPresent, setResponderPresent] = useState(false)\r\n    const [sectorOptions, setSectorOptions] = useState([])\r\n    const [sealSizeOption, setSealSizeOption] = useState([])\r\n    const [sexOptions, setSexOptions] = useState([])\r\n    const [howIdOption, setHowIdOption] = useState([])\r\n    const [tagSideOption, setTagSideOption] = useState([])\r\n    const [tagColorOption, setTagColorOption] = useState([])\r\n    const [statusOption, setStatusOption] = useState([])\r\n    const [issueOption, setIssueOption] = useState([])\r\n    const [islandOption, setIslandOption] = useState([])\r\n    const [FASTOption, setFASTOption] = useState([])\r\n    const [locationOption, setLocationOption] = useState([])\r\n    const [ticketOPtions, setTicketOptions] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const SubmitIncident = () => {\r\n        let value = `\r\n        mutation add_Incident{\r\n            addIncident(`\r\n        value += `firstName:${JSON.stringify(firstName)}, lastName:${JSON.stringify(lastName)}, phoneNumber:${JSON.stringify(phone)}, email:${JSON.stringify(email)}, location:${JSON.stringify(mapSearch)}, lat:${JSON.stringify(marker.lat)}, lng:${JSON.stringify(marker.lng)}, locationDescription:${JSON.stringify(locationDescription)}, sector:${JSON.stringify(sector.value)}, animalType:${JSON.stringify(animalsType.value)}, animalPresent:${JSON.stringify(animalPresent)}`\r\n        if (sealSize !== null)\r\n        {\r\n            value += `, sealSize:${JSON.stringify(sealSize)}`\r\n        }\r\n        if (sex !== null)\r\n        {\r\n            value += `, sex:${JSON.stringify(sex)}`\r\n        }\r\n        if (landWater !== null)\r\n        {\r\n            value += `, landOrWater:${JSON.stringify(landWater)}`\r\n        }\r\n        if (IDedType !== null)\r\n        {\r\n            value += `, howIdentified:${JSON.stringify(IDedType)}`\r\n        }\r\n        if (tagedSide !== null)\r\n        {\r\n            value += `, tagSide:${JSON.stringify(tagedSide)}`\r\n        }\r\n        if (tagColor !== null)\r\n        {\r\n            value += `, tagColor:${JSON.stringify(tagColor)}`\r\n        }\r\n        if (tagNumber !== null)\r\n        {\r\n            value += `, tagNumber:${JSON.stringify(tagNumber)}`\r\n        }\r\n        if (bleachNum !== null)\r\n        {\r\n            value += `, bleachNum:${JSON.stringify(bleachNum)}`\r\n        }\r\n        if (IdPerm !== null)\r\n        {\r\n            value += `, IDPerm:${JSON.stringify(IdPerm)}`\r\n        }\r\n        if (IdDescription !== null)\r\n        {\r\n            value += `, IDNotes:${JSON.stringify(IdDescription)}`\r\n        }\r\n        if (molting !== null)\r\n        {\r\n            value += `, molting:${JSON.stringify(molting)}`\r\n        }\r\n        if (sealLogging !== null)\r\n        {\r\n            value += `, sealLogging:${JSON.stringify(sealLogging)}`\r\n        }\r\n        if (momPup !== null)\r\n        {\r\n            value += `, animalWithBaby:${JSON.stringify(momPup)}`\r\n        }\r\n        if (sealDepart !== null)\r\n        {\r\n            value += `, sealDeparted:${JSON.stringify(sealDepart)}`\r\n        }\r\n        if (SRAName !== null)\r\n        {\r\n            value += `, SRAPerson:${JSON.stringify(SRAName)}`\r\n        }\r\n        if (departDate !== null)\r\n        {\r\n            value += `, dateDeparted:${JSON.stringify(departDate)}`\r\n        }\r\n        if (departTime !== null)\r\n        {\r\n            value += `, timeDeparted:${JSON.stringify(departTime)}`\r\n        }\r\n        if (size !== null)\r\n        {\r\n            value += `, turtleSize:${JSON.stringify(size)}`\r\n        }\r\n        if (FAST !== null)\r\n        {\r\n            value += `, FAST:${JSON.stringify(FAST)}`\r\n        }\r\n        if (status !== null)\r\n        {\r\n            value += `, status:${JSON.stringify(status)}`\r\n        }\r\n        if (issue !== null)\r\n        {\r\n            value += `, issue:${JSON.stringify(issue)}`\r\n        }\r\n        if (delivered !== null)\r\n        {\r\n            value += `, delivered:${JSON.stringify(delivered)}`\r\n        }\r\n        if (deliveryLocation !== null)\r\n        {\r\n            value += `, deliverdLocation:${JSON.stringify(deliveryLocation)}`\r\n        }\r\n        if (outReach !== null)\r\n        {\r\n            value += `, OperatorOutReach:${JSON.stringify(outReach)}`\r\n        }\r\n        if (island !== null)\r\n        {\r\n            value += `, onIsland:${JSON.stringify(island)}`\r\n        }\r\n        if (responderName !== null)\r\n        {\r\n            value += `, responderName:${JSON.stringify(responderName)}`\r\n        }\r\n        if (amountOfResponder !== null)\r\n        {\r\n            value += `, amountOfResponders:${JSON.stringify(amountOfResponder)}`\r\n        }\r\n        if (timeArrived !== null)\r\n        {\r\n            value += `, timeArrived:${JSON.stringify(timeArrived)}`\r\n        }\r\n        if (timeLeft !== null)\r\n        {\r\n            value += `, timeLeft:${JSON.stringify(timeLeft)}`\r\n        }\r\n        value += `, hotLineOperatorInit:${JSON.stringify(props.firstName[0]+props.lastName[0])}, observerType:${JSON.stringify(ticket)} , description:${JSON.stringify(description)}, images:${JSON.stringify(images)}){succcesses}}`\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: value\r\n            }\r\n        }).then((results)=> {\r\n            if(results.errors){\r\n                setError(true)\r\n            }\r\n            else{\r\n                history.push('/User')\r\n            }\r\n        }).catch((error)=> {\r\n            setError(true)\r\n        })\r\n        console.log('working')\r\n    }\r\n    const updateFiles = (incomingFiles) => {\r\n        setPicture(incomingFiles)\r\n    };\r\n\r\n    const Present = [{value: true, label:'Yes'}, {value: false, label:'No'}]\r\n    const LandWaterOptions = [{value:true, label:'Land'}, {value:false, label:'Water'}]\r\n\r\n    const removeFile = (id) => {\r\n        setPicture(pictures.filter((x) => x.id !== id));\r\n    };\r\n    \r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google=map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n        libraries: libraries,\r\n    })\r\n    const MapHandling = {\r\n        gestureHandling: 'greedy',\r\n    }\r\n\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '400px',\r\n    };\r\n\r\n    const markerOnLoad = useCallback((marker) => {\r\n        setMarkerMount(marker)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(mapSearch !== 'None'){\r\n            Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAP_API_KEY);\r\n            Geocode.setLanguage(\"en\");\r\n            Geocode.setRegion(\"us\");\r\n            Geocode.setLocationType(\"ROOFTOP\");\r\n            Geocode.fromAddress(mapSearch).then(\r\n                (response) => {\r\n                    const { lat, lng } = response.results[0].geometry.location;\r\n                    setCenter({\r\n                        lat: lat,\r\n                        lng: lng,\r\n                    });\r\n                    setMarker({\r\n                        lat: lat,\r\n                        lng: lng,\r\n                    })\r\n                    setShape({north: lat+0.0005, south: lat-0.0005, east:lng+0.0005, west: lng-0.0005})\r\n                },\r\n                (error) => {\r\n                }\r\n            );\r\n\r\n        }\r\n    }, [mapSearch])\r\n    useEffect(() => {\r\n        const options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n        const success = (pos) => {\r\n            var crd = pos.coords;\r\n            setCenter({lat:crd.latitude, lng:crd.longitude});\r\n        }\r\n        const error = (err) => {\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n        function fetchFormData() {\r\n            axios({\r\n                url:'/api/',\r\n                method: 'post',\r\n                data: {\r\n                    query: `\r\n                        query getForm{\r\n                            allSubanimals{\r\n                                subAnimal\r\n                                animal{\r\n                                    animal\r\n                                }\r\n                            }\r\n                            allSectors{\r\n                                observerType\r\n                            }\r\n                            allStatus{\r\n                                options\r\n                            }\r\n                            allDeath{\r\n                                options\r\n                            }\r\n                            allIsland{\r\n                                island\r\n                            }\r\n                            allSealsize{\r\n                                options\r\n                            }\r\n                            allSex{\r\n                                options\r\n                            }\r\n                            allHowId{\r\n                                options\r\n                            }\r\n                            allTagside{\r\n                                options\r\n                            }\r\n                            allTagcolor{\r\n                                options\r\n                            }\r\n                            allFast{\r\n                                options\r\n                            }\r\n                            allLocation{\r\n                                options\r\n                            }\r\n                            allObserver{\r\n                                observerType\r\n                            }\r\n                        }\r\n                    `\r\n                }\r\n            }).then((results)=> {\r\n                if(results.errors){\r\n                    history.push(\"/\")\r\n                }\r\n                else{\r\n                    let animalTypeData = []\r\n                    let Section = []\r\n                    let SealSize = []\r\n                    let Sex = []\r\n                    let HowID = []\r\n                    let TagSide = []\r\n                    let TagColor = []\r\n                    let Status = []\r\n                    let Issue = []\r\n                    let Island = []\r\n                    let fast = []\r\n                    let Location = []\r\n                    let Ticket = []\r\n                    results.data.data.allSubanimals.forEach((obj) => {\r\n                        let interge = true\r\n                        if (animalTypeData.length === 0){\r\n                            animalTypeData.push({label: obj['animal']['animal'], options:[]})\r\n                        }\r\n                        else{\r\n                            animalTypeData.forEach((x) => {\r\n                                if (x.label === obj['animal']['animal']){\r\n                                    interge = false\r\n                                }\r\n                            })\r\n                            if(interge){\r\n                                animalTypeData.push({label: obj['animal']['animal'], options:[]})\r\n                            }\r\n                        }\r\n                        animalTypeData.forEach((info) => {\r\n                            if(info['label'] === obj['animal']['animal']){\r\n                                info['options'].push({ value: obj['subAnimal'], label: obj['subAnimal'], family:obj['animal']['animal']})\r\n                            }\r\n                        })\r\n                    })\r\n                    results.data.data.allSectors.forEach((obj) => {\r\n                        Section.push({value:obj['observerType'], label:obj['observerType']})\r\n                    })\r\n                    results.data.data.allSealsize.forEach((obj) => {\r\n                        SealSize.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allSex.forEach((obj) => {\r\n                        Sex.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allHowId.forEach((obj) => {\r\n                        HowID.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allTagside.forEach((obj)=>{\r\n                        TagSide.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allTagcolor.forEach((obj) => {\r\n                        TagColor.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allStatus.forEach((obj) => {\r\n                        Status.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allDeath.forEach((obj) => {\r\n                        Issue.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allIsland.forEach((obj)=>{\r\n                        Island.push({value: obj['island'], label:obj['island']})\r\n                    })\r\n                    results.data.data.allFast.forEach((obj) => {\r\n                        fast.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allLocation.forEach((obj) => {\r\n                        Location.push({value: obj['options'], label:obj['options']})\r\n                    })\r\n                    results.data.data.allObserver.forEach((obj) => {\r\n                        Ticket.push({value: obj['observerType'], label:obj['observerType']})\r\n                    })\r\n                    setAnimalOptions(animalTypeData)\r\n                    setSectorOptions(Section)\r\n                    setSealSizeOption(SealSize)\r\n                    setSexOptions(Sex)\r\n                    setHowIdOption(HowID)\r\n                    setTagSideOption(TagSide)\r\n                    setTagColorOption(TagColor)\r\n                    setFASTOption(fast)\r\n                    setIslandOption(Island)\r\n                    setIssueOption(Issue)\r\n                    setStatusOption(Status)\r\n                    setLocationOption(Location)\r\n                    setTicketOptions(Ticket)\r\n                }\r\n            })\r\n        }\r\n        fetchFormData()\r\n    }, []);\r\n    useEffect(() => {\r\n        if(phone != null || document.getElementById('phoneField') === document.activeElement){\r\n            document.getElementById('phoneLabel').style.transform = \"translateY(-4rem) scale(0.8)\";\r\n        }\r\n        else{\r\n            document.getElementById('phoneLabel').style.transform = null;\r\n        }\r\n    }, [phone]);\r\n\r\n    useEffect(()=>{\r\n        if(phone !== null){\r\n            if(marker !== {lat:null, lng:null}){\r\n                if(firstName !== ''){\r\n                    if(lastName !== ''){\r\n                        if(email !== ''){\r\n                            if(mapSearch !== 'None'){\r\n                                if(pictures.length > 0){\r\n                                    if(description !== ''){\r\n                                        setSubmitQuery(false)\r\n                                    }\r\n                                    else{\r\n                                        setSubmitQuery(true)\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    setSubmitQuery(true)\r\n                                }\r\n                            }\r\n                            else{\r\n                                setSubmitQuery(true)\r\n                            }\r\n                        }\r\n                        else{\r\n                            setSubmitQuery(true)\r\n                        }\r\n                    }\r\n                    else{\r\n                        setSubmitQuery(true)\r\n                    }\r\n                }\r\n                else{\r\n                    setSubmitQuery(true)\r\n                }\r\n            }\r\n            else{\r\n                setSubmitQuery(true)\r\n            }\r\n        }\r\n        else{\r\n            setSubmitQuery(true)\r\n        }\r\n        if (pictures.length > 0){\r\n            let pictured = []\r\n            for(var x = 0; x < pictures.length; x++){\r\n                let Reader = new FileReader();\r\n                Reader.onload = function (event) {\r\n                    let image = pictures.slice();\r\n                    image.push(event.target.result);\r\n                    pictured.push(image[pictures.length])\r\n                    \r\n                };\r\n                Reader.readAsDataURL(pictures[x].file);\r\n            }\r\n            setImages(pictured)\r\n        }\r\n    }, [phone, marker, firstName, lastName, email, mapSearch, pictures, description])\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <div className=\"mt-6 mb-6\">\r\n                <Container>\r\n                    { error && <Row>\r\n                        <Col>\r\n                        <Alert variant=\"danger\">There seems to be an issue with your submitted data check all values and try to resubmit</Alert>\r\n                        </Col>\r\n                        </Row>}\r\n                    <Row>\r\n                        <Col>\r\n                            <Select className=\"bringUp4\" options={ticketOPtions} onChange={(info)=>{setTicket(info.value)}} name=\"animal\" placeholder=\"Seal Size\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" name=\"first name\" value={firstName} onChange={(event) => {setFirstName(event.target.value)}} type=\"text\" placeholder=\" \"/>\r\n                                <label for=\"first name\" className=\"label\">First Name</label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" value={lastName} onChange={(event) => {setLastName(event.target.value)}} name=\"last name\" type=\"text\" placeholder=\" \"/>\r\n                                <label for=\"last name\" className=\"label\">Last Name</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div id=\"phoneField\" on className=\"field\">\r\n                                <PhoneInput defaultCountry=\"US\" onChange={(x) => {\r\n                                    setPhone(x)\r\n                                }} name=\"phone number\" value={phone} placeholder=\" \"/>\r\n                                <label for=\"phone number\" id={\"phoneLabel\"} className=\"phonelabel\">Phone Number</label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"field\">\r\n                                <input className=\"input\" value={email} onChange={(event) => {setEmail(event.target.value)}} name=\"email\" type=\"email\" placeholder=\" \"/>\r\n                                <label for=\"email\" className=\"label\">Email</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoaded && <StandaloneSearchBox onPlacesChanged={(value) => {\r\n                            if(document.getElementsByName('Location')[0].value !== '') {\r\n                                setMapSearch(document.getElementsByName('Location')[0].value)\r\n                            }\r\n                            else{\r\n                                setMapSearch('')\r\n                            }\r\n                            }}>\r\n                                <div className=\"field\">\r\n                                    <input className=\"input\" name=\"Location\" type=\"text\" placeholder=\" \"/>\r\n                                    <label for=\"Location\" className=\"label\">Location</label>\r\n                                </div>\r\n                            </StandaloneSearchBox>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field more-border\">\r\n                                <textarea className=\"input\" value={locationDescription} onChange={(event) => {setLocationDescription(event.target.value)}} name=\"LocationDes\" placeholder=\" \"/>\r\n                                <label for=\"LocationDes\" className=\"label\">Location Description...</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoaded && <GoogleMap\r\n                            mapContainerStyle={containerStyle}\r\n                            center={center}\r\n                            zoom={15}\r\n                            options={MapHandling}>\r\n                                <Marker position={marker} draggable={true} onLoad={markerOnLoad} onDragEnd={()=>{\r\n                                    setMarker({lat: markerMount.position.lat(), lng: markerMount.position.lng()})\r\n                                    setShape({north: markerMount.position.lat()+0.0005, south: markerMount.position.lat()-0.0005, east:markerMount.position.lng()+0.0005, west: markerMount.position.lng()-0.0005})\r\n                                    }}/>\r\n                                <Rectangle onload bounds={shape}/>\r\n                            </GoogleMap>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-5 mb-5\">\r\n                        <Col>\r\n                            <Select className=\"bringUp5\" options={sectorOptions} onChange={(info)=>setSector(info)} name=\"animal\" placeholder=\"Sector\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp5\" options={animaloptions} name=\"animal\" onChange={(info)=>setAnimalsType(info)} placeholder=\"Animal Type...\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp5\" options={Present} onChange={(info)=>{setAnimalPresent(info.value)}} name=\"animal\" placeholder=\"Animal Present\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {animalsType.family === 'Seal' && \r\n                        <div>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={sealSizeOption} onChange={(info)=>{setSealSize(info.value)}} name=\"animal\" placeholder=\"Seal Size\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={sexOptions} onChange={(info)=>{setSex(info.value)}} name=\"animal\" placeholder=\"Sex\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp4\" options={LandWaterOptions} onChange={(info)=>{setLandwater(info.value)}} name=\"animal\" placeholder=\"On Land or Water\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={howIdOption} onChange={(info)=>{setIdType(info.value)}} name=\"animal\" placeholder=\"How Identified\" />\r\n                                </Col>\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={tagSideOption} onChange={(info)=>{setTagedSide(info.value)}} name=\"animal\" placeholder=\"Tag Side\" />\r\n                                </Col>}\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <Select className=\"bringUp3\" options={tagColorOption} onChange={(info)=>{setTagColor(info.value)}} name=\"animal\" placeholder=\"Tag Color\" />\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row>\r\n                                {IDedType === 'Tag' &&\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={tagNumber} onChange={(event) => {setTagNumber(event.target.value)}} name=\"TagNumber\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"TagNumber\" className=\"label\">Tag Number</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {IDedType === 'Applied bleach' &&\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={bleachNum} onChange={(event) => {setBleachNum(event.target.value)}} name=\"BleachNum\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"BleachNum\" className=\"label\">ID Temp (Bleach#)</label>\r\n                                    </div>\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={IdPerm} onChange={(event) => {setIdPerm(event.target.value)}} name=\"IDPerm\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"IDPerm\" className=\"label\">ID Perm</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={IdDescription} onChange={(event) => {setIdDescription(event.target.value)}} name=\"IDNotes\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"IDNotes\" className=\"label\">Additional Notes on ID</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event) => {setMolting(event.value)}}name=\"animal\" placeholder=\"Molting\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event)=>{setSealLogging(event.value)}} name=\"animal\" placeholder=\"Seal Logging\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp2\" options={Present} onChange={(event)=>{setMomPup(event.value)}} name=\"animal\" placeholder=\"Mom and Pup pair\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setSRASetUp(event.value)}} name=\"animal\" placeholder=\"SRA Set up\"/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setSealDepart(event.value)}} name=\"animal\" placeholder=\"Seal Departed\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {SRASetUp && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={SRAName} onChange={(event) => {setSRAName(event.target.value)}} name=\"SetUp\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"SetUp\" className=\"label\">SRA Set Up By</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {sealDepart && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={departDate} onChange={(event) => {setDepartDate(event.target.value)}} name=\"dateDeparted\" type=\"date\" placeholder=\" \"/>\r\n                                        <label for=\"dateDeparted\" className=\"label\">Date Departed</label>\r\n                                    </div>\r\n                                </Col>}\r\n                                {sealDepart && <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={departTime} onChange={(event) => {setDepartTime(event.target.value)}} name=\"TimeDeparted\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeDeparted\" className=\"label\">Time Departed</label>\r\n                                    </div>\r\n                                </Col>}\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    {animalsType.family === 'Sea Turtle' && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={size} onChange={(event) => {setSize(event.target.value)}} name=\"tutleSize\" type=\"number\" placeholder=\" \"/>\r\n                                        <label for=\"tutleSize\" className=\"label\">Size of tutle(in Feet)</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp1\" options={statusOption} onChange={(event) => {setStatus(event.value)}} name=\"animal\" placeholder=\"Status\"/>\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp\" options={issueOption} onChange={(event) => {setIssue(event.value)}} name=\"animal\" placeholder=\"Issue or Cause of Death\"/>\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp-1\" options={islandOption} onChange={(event) => {setIsland(event.value)}} name=\"animal\" placeholder=\"On What Island\" />\r\n                                </Col>\r\n                                <Col className=\"mb-1\" md={12} lg={3}>\r\n                                    <Select className=\"bringUp-2\" options={FASTOption} onChange={(event) => {setFAST(event.value)}} name=\"animal\" placeholder=\"F.A.S.T\" />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        \r\n                    }\r\n                    {animalsType.family === 'Sea Birds' && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Select className=\"bringUp1\" options={Present} onChange={(event)=>{setDeleivered(event.value)}} name=\"animal\" placeholder=\"Delivered\"/>\r\n                                </Col>\r\n                                {delivered && <Col>\r\n                                    <Select className=\"bringUp1\" options={locationOption} onChange={(event)=>{setDeliveryLocation(event.value)}} name=\"animal\" placeholder=\"Delivered\"/>\r\n                                </Col>}\r\n                            </Row>\r\n                            <Row className=\"mb-5\">\r\n                                \r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp-3\" options={Present} name=\"VolunteerPresent\" onChange={(info)=>setResponderPresent(info.value)} placeholder=\"Responders/Volunteers Present\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Select className=\"bringUp-3\" options={Present} onChange={(event)=>{setOutReach(event.value)}} name=\"animal\" placeholder=\"OutReach Provided by Operator\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {responderPresent && \r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={responderName} onChange={(event) => {SetResponderName(event.target.value)}} name=\"ResponderName\" type=\"text\" placeholder=\" \"/>\r\n                                        <label for=\"ResponderName\" className=\"label\">Responders Name</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={amountOfResponder} onChange={(event) => {setAmountOfResponder(event.target.value)}} name=\"Amount of Volunteer / Responders\" type=\"number\" placeholder=\" \"/>\r\n                                        <label for=\"Amount of Volunteer / Responders\" className=\"label\">Amount of Responders</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={timeArrived} onChange={(event) => {setTimeArrived(event.target.value)}} name=\"TimeArrived\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeArrived\" className=\"label\">Time Arrived</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"field\">\r\n                                        <input className=\"input\" value={timeLeft} onChange={(event) => {setTimeLeft(event.target.value)}} name=\"TimeLeft\" type=\"time\" placeholder=\" \"/>\r\n                                        <label for=\"TimeLeft\" className=\"label\">Time Left</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"field more-border\">\r\n                                <textarea className=\"input\" value={description} onChange={(event) => {setDescription(event.target.value)}} name=\"MoreInfo\" placeholder=\" \"/>\r\n                                <label for=\"MoreInfo\" className=\"label\">Description ...</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Dropzone accept={'image/\\*'} style={{ minWidth: \"500px\" }} onChange={updateFiles} value={pictures}>\r\n                                {pictures.map((picture, key)=>{\r\n                                    return(<FileItem {...picture} onDelete={removeFile} preview info key={picture.id}/>)\r\n                                })}\r\n                            </Dropzone>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Navbar fixed=\"bottom\" bg=\"light\">\r\n                <Container>\r\n                    <h4>When finished you will be allowed to click Submit</h4>\r\n                    <Nav className=\"ms-auto\">\r\n                        <Button className=\"float-right\" onClick={()=>SubmitIncident()} disabled={submitQuery} variant=\"success\">Submit</Button>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReport;","import React, {useState, useEffect, useCallback, useMemo} from 'react';\r\nimport {useHistory, useLocation } from 'react-router-dom';\r\nimport {GoogleMap, useJsApiLoader, Marker, Rectangle} from '@react-google-maps/api';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {Container, Row, Col, Table, Pagination} from 'react-bootstrap';\r\nimport Filter from 'react-searchable-filter';\r\nimport axios from \"axios\";\r\nimport './Home.scss';\r\nimport 'react-searchable-filter/dist/index.css';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [Reoprts, setReports] = useState([])\r\n    const [subAnimal, setSubAnimal] = useState([])\r\n    const [animal, setAnimal] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const [, setMarkerMount] = useState()\r\n    const history = useHistory()\r\n    const { search } = useLocation();\r\n    const [pagNum, setPagNum] = useState([])\r\n    const [currentPag, setCurrentPag] = useState(String(1))\r\n    const query = useMemo(() => new URLSearchParams(search), [search]);\r\n    const pag = query.get(\"pagination\")\r\n\r\n\r\n    useEffect(() => {\r\n        if(!pag){\r\n            history.push('/user?pagination=1')\r\n        }\r\n        if(pag){\r\n            setCurrentPag(pag)\r\n        }\r\n        let queryed = `query data{\r\n            PaginatedReport(pagination:${JSON.stringify(String(currentPag))}`\r\n        if (filter.StartDate){\r\n            queryed += `, StartDate:${JSON.stringify(filter.StartDate)}`\r\n        }\r\n        if (filter.EndDate){\r\n            queryed += `, EndDate:${JSON.stringify(filter.EndDate)}`\r\n        }\r\n        if (filter.TicketNumber){\r\n            queryed += `, TicketNumber:${JSON.stringify(filter.TicketNumber)}`\r\n        }\r\n        if (filter.Animal){\r\n            queryed += `, Animal:${JSON.stringify(filter.Animal)}`\r\n        }\r\n        if (filter.SpecificAnimal){\r\n            queryed += `, SpecificAnimal:${JSON.stringify(filter.SpecificAnimal)}`\r\n        }\r\n        queryed += `){\r\n            paginationNum\r\n            AmountOfPagination\r\n            data{\r\n              Date\r\n              Time\r\n              TicketNumber\r\n              location\r\n              lat\r\n              lng\r\n              Top\r\n              Bottom\r\n              Left\r\n              Right\r\n              animalType{\r\n                subAnimal\r\n                acronym\r\n              }\r\n            }\r\n          }\r\n          allSubanimals{\r\n              subAnimal\r\n          }\r\n          allAnimals{\r\n              animal\r\n          }\r\n        }`\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: queryed\r\n            }\r\n        }).then((results) => {\r\n            let Animal = []\r\n            let subAnimal = []\r\n            results.data.data.allAnimals.forEach((x)=>{\r\n                Animal.push(x.animal.replace(/ /g, \"\"))\r\n            })\r\n            results.data.data.allSubanimals.forEach((x)=>{\r\n                subAnimal.push(x.subAnimal.replace(/ /g, \"\"))\r\n            })\r\n            setReports(results.data.data.PaginatedReport.data)\r\n            setSubAnimal(subAnimal)\r\n            setAnimal(Animal)\r\n            let Pagen = []\r\n            for (var i = 0; i<results.data.data.PaginatedReport.AmountOfPagination; i++){\r\n                let b = i+1\r\n                Pagen.push(b)\r\n            }\r\n            console.log(Pagen)\r\n            setPagNum(Pagen)\r\n        })\r\n    }, [query, history, currentPag, filter])\r\n    const submitHandler = (x) => {\r\n        let filterData = {}\r\n        x.forEach((x) => {\r\n            filterData[x.filterBy]=x.values[0]\r\n        })\r\n        setFilter(filterData)\r\n    }\r\n    const [libraries] = useState([\"places\"])\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google=map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n        libraries: libraries,\r\n    })\r\n    const MapHandling = {\r\n        gestureHandling: 'greedy',\r\n    }\r\n\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '600px',\r\n    };\r\n    const data = [\r\n        {\r\n            filterBy: 'StartDate',\r\n            description: 'The start date you are looking for',\r\n            values: []\r\n        },\r\n        {\r\n            filterBy: 'EndDate',\r\n            values: [],\r\n            description: 'The end date you are looking for'   \r\n        },\r\n        {\r\n            filterBy: 'TicketNumber',\r\n            values: [],\r\n            description: 'Ticket number of incident'\r\n        },\r\n        {\r\n            filterBy: 'Animal',\r\n            values: animal,\r\n            description: 'Filter by animal'\r\n        },\r\n        {\r\n            filterBy: 'SpecificAnimal',\r\n            values: subAnimal,\r\n            description: 'Filter by Specific animal'\r\n        },\r\n    ]\r\n    const markerOnLoad = useCallback((marker) => {\r\n        setMarkerMount(marker)\r\n    }, [])\r\n    const [center] = useState({lat: 21.439542579000033, lng:-157.94363192999998});\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                {isLoaded && <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={7}\r\n                    options={MapHandling}>\r\n                        {Reoprts.map((info)=>{\r\n                            console.log('yelp')\r\n                            return(\r\n                                <div>\r\n                                    <Marker position={{lat:parseFloat(info.lat), lng:parseFloat(info.lng)}} onClick={()=>{history.push(\"/user/report/\"+info.TicketNumber)}} onLoad={markerOnLoad}/>\r\n                                    <Rectangle onClick={()=>{history.push(\"/user/report/\"+info.TicketNumber)}} onload bounds={{north:parseFloat(info.Top), south:parseFloat(info.Bottom), east:parseFloat(info.Right), west:parseFloat(info.Left)}}/>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </GoogleMap>}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='Filter'>\r\n                    <Filter options={data} onSubmit={submitHandler} placeholder='Filter Reports'/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Time</th>\r\n                                <th>Ticket Number</th>\r\n                                <th>Location</th>\r\n                                <th>Animal</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Reoprts.map((data)=>{\r\n                                return(\r\n                                    <LinkContainer to={\"/user/report/\"+data.TicketNumber}>\r\n                                        <tr>\r\n                                            <td>{data.Date}</td>\r\n                                            <td>{data.Time}</td>\r\n                                            <td>{data.TicketNumber}</td>\r\n                                            <td>{data.location}</td>\r\n                                            <td>{data.animalType.subAnimal}</td>\r\n                                        </tr>\r\n                                    </LinkContainer>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Pagination>\r\n                        {pagNum.map((x)=>{\r\n                            console.log(currentPag)\r\n                            return(\r\n                            <LinkContainer to={\"/user?pagination=\"+x}>\r\n                                <Pagination.Item key={x} active={String(x)===String(currentPag)}>\r\n                                    {x}\r\n                                </Pagination.Item>\r\n                            </LinkContainer>)\r\n                        })}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useState, useCallback} from 'react';\r\nimport {Container, Col, Row, Carousel} from 'react-bootstrap';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport {GoogleMap, useJsApiLoader, Marker, Rectangle} from '@react-google-maps/api';\r\nimport './Detail.scss';\r\n\r\nconst DisplayData = () => {\r\n    const {ReportNumber} = useParams()\r\n    const [data, setData] = useState({})\r\n    const [, setMarkerMount] = useState()\r\n    useEffect(() => {\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: `query dataCSV{\r\n                    singleReport(TicketNum:${JSON.stringify(ReportNumber)}){\r\n                      Date\r\n                      Time\r\n                      TicketNumber\r\n                      HotlineOperatorInitials\r\n                      TicketType{\r\n                        acronym\r\n                      }\r\n                      firstName\r\n                      lastName\r\n                      email\r\n                      phone\r\n                      ObserverInitials\r\n                      ObserverType{\r\n                        observerType\r\n                      }\r\n                      Sector{\r\n                        observerType\r\n                      }\r\n                      location\r\n                      locationDetails\r\n                      lat\r\n                      lng\r\n                      Top\r\n                      Bottom\r\n                      Left\r\n                      Right\r\n                      AnimalPresent\r\n                      SealSize{\r\n                        options\r\n                      }\r\n                      sex{\r\n                        options\r\n                      }\r\n                      beachPosition\r\n                      HowId{\r\n                        options\r\n                      }\r\n                      BleachNumber\r\n                      TagNumber\r\n                      TagSide{\r\n                        options\r\n                      }\r\n                      TagColor{\r\n                        options\r\n                      }\r\n                      onIsland{\r\n                        island\r\n                      }\r\n                      animalType{\r\n                        subAnimal\r\n                        animal{\r\n                            animal\r\n                          }\r\n                      }\r\n                      size\r\n                      status{\r\n                        options\r\n                      }\r\n                      CauseOfDeath{\r\n                        options\r\n                      }\r\n                      IDPerm\r\n                      Molt\r\n                      IDDescription\r\n                      IDVerifiedBy\r\n                      SealLogging\r\n                      MomPup\r\n                      SRASetUp\r\n                      SRASetBy\r\n                      VolunteersEngaged\r\n                      SealDepart\r\n                      SealDepartDate\r\n                      SealDepartTime\r\n                      Responder\r\n                      ResponderArrived\r\n                      ResponderLeft\r\n                      OutreachProvided\r\n                      FAST{\r\n                        options\r\n                      }\r\n                      incident{\r\n                        firstName\r\n                      }\r\n                      Delivered\r\n                      WhereTo{\r\n                        options\r\n                      }\r\n                      description\r\n                      animalImages\r\n                    }\r\n                  }`\r\n            }\r\n        }).then((results) => {\r\n            setData(results.data.data.singleReport)\r\n        })\r\n    }, [])\r\n    const [libraries] = useState([\"places\"])\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google=map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n        libraries: libraries,\r\n    })\r\n    const MapHandling = {\r\n        gestureHandling: 'false',\r\n        draggable: false,\r\n    }\r\n    const markerOnLoad = useCallback((marker) => {\r\n        setMarkerMount(marker)\r\n    }, [])\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '400px',\r\n    };\r\n    return data.Date ? (\r\n        <Container className=\"mt-6\">\r\n            <Row>\r\n                <Col>\r\n                    <h2>Ticket Number: {ReportNumber}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"imageback\">\r\n                    <Carousel>\r\n                    {data.animalImages && data.animalImages.map((x, key)=>{\r\n                        return(\r\n                        <Carousel.Item>\r\n                                <img className=\"d-block w-100\" key={key} src={x} alt=\"some incident Report\"/>\r\n                        </Carousel.Item>)\r\n                    })}\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-4\">\r\n                <Col lg={3} md={12}><h6><b>Date:</b>{data.Date}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Time:</b>{data.Time}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Hot Line Operator Initials:</b>{data.HotlineOperatorInitials}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Ticket Type:</b>{data.TicketType.acronym}</h6></Col>\r\n            </Row>\r\n            <Row className=\"mt-4\">\r\n                <Col lg={3} md={12}><h6><b>Observer First Name:</b> {data.firstName}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Observer Last Name:</b> {data.lastName}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Email:</b>{data.email}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Phone Number:</b><a href={'tel:'+data.phone}>{data.phone}</a></h6></Col>\r\n            </Row>\r\n            <Row className=\"mt-4\">\r\n                <Col lg={3} md={12}><h6><b>Observer Inistails:</b> {data.ObserverInitials}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Observer Type:</b> {data.ObserverType.observerType}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>Sector:</b>{data.Sector.observerType}</h6></Col>\r\n                <Col lg={3} md={12}><h6><b>location:</b>{data.location}</h6></Col>\r\n            </Row>\r\n            <Row className=\"mt-4 mb-4\">\r\n                <Col lg={6} md={12}>\r\n                {isLoaded && <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={{lat:parseFloat(data.lat), lng:parseFloat(data.lng)}}\r\n                    zoom={15}\r\n                    options={MapHandling}>\r\n                        <Marker position={{lat:parseFloat(data.lat), lng:parseFloat(data.lng)}} onLoad={markerOnLoad}/>\r\n                        <Rectangle onload bounds={{north:parseFloat(data.Top), south:parseFloat(data.Bottom), east:parseFloat(data.Right), west:parseFloat(data.Left)}}/>\r\n                    </GoogleMap>}\r\n                </Col>\r\n                <Col lg={6} md={12}>\r\n                <h6><b>location Detail:</b>{data.locationDetails}</h6>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-4\">\r\n                <Col lg={4} md={12}><h6><b>Animal Present:</b> {data.AnimalPresent?'Yes':'No'}</h6></Col>\r\n                <Col lg={4} md={12}><h6><b>Description:</b> {data.description}</h6></Col>\r\n                <Col lg={4} md={12}><h6><b>Amount of Reports:</b> {String(data.incident.length)}</h6></Col>\r\n            </Row>\r\n            {data.animalType.animal.animal === 'Seal' &&\r\n            <div>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>Size:</b> {data.SealSize.options}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Sex:</b> {data.sex.options}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Beach Position:</b> {String(data.beachPosition?'Land':'Water')}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>How Identified:</b> {data.HowId.options}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>ID Temp (Bleach #):</b> {data.BleachNumber}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Tag Number:</b> {data.TagNumber}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Tag Side:</b> {data.TagSide && data.TagSide.options}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Tag Color:</b> {data.TagColor && data.TagColor.options}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>ID Perm:</b> {data.IDPerm}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Molt:</b> {data.Molt?'Yes':'No'}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Additional Notes on ID:</b> {data.IDDescription}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>ID Verified By:</b> {data.IDVerifiedBy}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>Seal Logging:</b> {data.SealLogging}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Mom & Pup Pair:</b> {data.MomPup}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>SRA Set Up:</b> {String(data.SRASetUp?'Yes':'No')}</h6></Col>\r\n                    <Col lg={3} md={12}>{data.SRASetUp && <h6><b>SRA Set By:</b> {data.SRASetBy}</h6>}</Col>\r\n                </Row>\r\n                <Row className=\"mt-4 mb-4\">\r\n                    <Col lg={3} md={12}><h6><b># of Volunteers Engaged:</b> {data.VolunteersEngaged==null?'0':String(data.VolunteersEngaged)}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Seal Depar Info Avail:</b> {data.SealDepart?'Available':'Not Available'}</h6></Col>\r\n                    <Col lg={3} md={12}>{data.SealDepart&&<h6><b>Seal Depart Date:</b> {data.SealDepartDate}</h6>}</Col>\r\n                    <Col lg={3} md={12}>{data.SealDepart&&<h6><b>Seal Depart Time:</b> {data.SealDepartTime}</h6>}</Col>\r\n                </Row>\r\n            </div>}\r\n            {data.animalType.animal.animal === 'Sea Turtle' && \r\n            <div>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>Type of Turtle:</b> {data.animalType.subAnimal}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Size:</b> {data.size}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Status (deceased or alive):</b> {data.status.options}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Primary issue or cause of dath:</b> {data.CauseOfDeath.options}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>Responder (only when reponse is needed):</b> {data.Responder}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Time Responder left:</b> {data.ResponderLeft}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Time Responder Arrived:</b> {data.ResponderArrived}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Outreach Provided by operator:</b> {data.OutreachProvided ? 'Yes':'No'}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4 mb-4\">\r\n                    <Col lg={6} md={12}><h6><b>F.A.S.T:</b> {data.FAST !== null && data.FAST.options}</h6></Col>\r\n                    <Col lg={6} md={12}><h6><b>Island:</b> {data.onIsland.island}</h6></Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n            {data.animalType.animal.animal === 'Sea Birds' && \r\n            <div>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={3} md={12}><h6><b>Type of Birds:</b> {data.animalType.subAnimal}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Responder (only when reponse is needed):</b> {data.Responder}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Delivered:</b> {data.Delivered? 'Yes': 'No'}</h6></Col>\r\n                    <Col lg={3} md={12}><h6><b>Where to?:</b> {data.WhereTo !== null && data.WhereTo.options}</h6></Col>\r\n                </Row>\r\n                <Row className=\"mt-4 mb-4\">\r\n                    <Col lg={12} md={12}><h6><b>Outreach Provided by operator:</b> {data.OutreachProvided ? 'Yes':'No'}</h6></Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n        </Container>\r\n    ):(<div></div>)\r\n}\r\n\r\nexport default DisplayData;","import {Navbar, Nav, Container, Button, Modal, NavDropdown, Alert} from 'react-bootstrap';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { createAvatar } from '@dicebear/avatars';\r\nimport * as style from '@dicebear/avatars-initials-sprites';\r\nimport SVG from 'react-inlinesvg';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useHistory,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './footer.scss';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport CSVFile from '../Template/UserTemplate/ExportCSV/Export';\r\nimport FileReport from '../Template/UserTemplate/MakeReports/Report';\r\nimport Home from '../Template/UserTemplate/Home/Home';\r\nimport DisplayData from '../Template/UserTemplate//DisplayData/DisplayData';\r\n\r\n\r\nconst Usertemplate = () => {\r\n    const [invite, setInvite] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [superUser, setSuperUser] = useState(true);\r\n    const [inviteUser, setInviteUser] = useState(false);\r\n    const [inviteSuccess, setInviteSuccess] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    let svg = createAvatar(style, {\r\n        seed: firstName + ' ' + lastName\r\n    })\r\n    const logout = () => {\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n                    mutation deleteTokenCookie{\r\n                        deleteTokenCookie(input: {}) {\r\n                        deleted\r\n                        }\r\n                    }\r\n                `\r\n            }\r\n        }).then((results)=> {\r\n            history.push('/');\r\n            \r\n        })\r\n    }\r\n    const userInvite = () => {\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n                    mutation inviteUser{\r\n                        inviteUser(email:\"kobeuyeda@outlook.com\"){\r\n                        info\r\n                        }\r\n                    }\r\n                `\r\n            }\r\n        }).then((results)=> {\r\n            if(results.data.errors){\r\n                setInviteUser(true)\r\n                \r\n            }\r\n            else{\r\n                setInviteSuccess(true)\r\n            }\r\n            \r\n        })\r\n    }\r\n    const Close = () => {\r\n        setInviteSuccess(false)\r\n        setInvite(false)\r\n        setInviteUser(false)\r\n    }\r\n    const Show = () => setInvite(true)\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            url:'/api/',\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n                query currentUser {\r\n                    currentUser{\r\n                      firstName\r\n                      LastName\r\n                      isSuperuser\r\n                    }\r\n                  }\r\n                `\r\n            }\r\n        }).then((results)=> {\r\n            if(results.data.errors){\r\n                //history.push('/');\r\n            }\r\n            else{\r\n                setSuperUser(results.data.data.currentUser.isSuperuser)\r\n                setFirstName(results.data.data.currentUser.firstName)\r\n                setLastName(results.data.data.currentUser.LastName)\r\n            }\r\n        }).catch((error)=> {\r\n            //history.push('/');\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <Modal show={invite} onHide={Close} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        {inviteUser && <Alert variant={'danger'}>Error: There seems to be an error sending out the email</Alert>}\r\n                        {inviteSuccess && <Alert variant={'success'}>Success: An Invite email has been sent</Alert>}\r\n                        <p>Put in the email of the user you would like to create an account for. Send one invite out at a time.</p>\r\n                        <div className=\"field\">\r\n                            <input type=\"email\" value={email} onChange={(x) => setEmail(x.target.value)} name=\"email\" className=\"input\" placeholder=\"\"/>\r\n                            <label for=\"email\" className=\"label\">Email</label>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={()=>userInvite()}>Create an Account</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <img src=\"https://www.mauibath.com/wp-content/uploads/2019/10/596998840197290025-300x300.png\" className=\"d-inline-block align-top\" width=\"50\" height=\"50\" alt=\"HMAR logo\"/>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            <LinkContainer to=\"/User\">\r\n                                <Nav.Link>Reports</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/User/Make-Report\">\r\n                                <Nav.Link>Make Reports</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/User/Export-Report\">\r\n                                <Nav.Link>Export Reports</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                        <Nav className=\"ms-auto\">\r\n                            <NavDropdown title={<SVG src={svg} width={40}/>} id=\"basic-nav-dropdown\">\r\n                                {/*superUser && <NavDropdown.Item onClick={Show}><i class=\"fas fa-user-circle\"></i>  Create Accounts</NavDropdown.Item>*/}\r\n                                {/*<LinkContainer to=\"/User/settings\"><NavDropdown.Item><i class=\"fas fa-cog\"></i>  Settings</NavDropdown.Item></LinkContainer>*/}\r\n                                <NavDropdown.Item onClick={()=>{logout()}}><i class=\"fas fa-sign-out-alt\"></i>  Log Out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <Switch>\r\n                <Route path='/User' exact={true}>\r\n                    <Home/>\r\n                </Route>\r\n                <Route path=\"/User/Make-Report\" exact={true}>\r\n                    <FileReport firstName={firstName} lastName={lastName}/>\r\n                </Route>\r\n                <Route path=\"/User/Export-Report\" exact={true}>\r\n                    <CSVFile/>\r\n                </Route>\r\n                <Route path=\"/user/report/:ReportNumber\">\r\n                    <DisplayData/>\r\n                </Route>\r\n                <Redirect from=\"/user\" to=\"/User\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Usertemplate;\r\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Basetemplate from './Router/BaseRoute';\nimport Usertemplate from './Router/UserRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/User'>\n            <Usertemplate/>\n          </Route>\n          <Route path='/'>\n            <Basetemplate/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}